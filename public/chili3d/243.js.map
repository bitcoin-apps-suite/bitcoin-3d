{"version":3,"file":"243.js","sources":["webpack://bitcoin-3d/./packages/chili-three/src/threeHelper.ts","webpack://bitcoin-3d/./packages/chili-three/src/common.ts","webpack://bitcoin-3d/./packages/chili-three/src/constants.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeGeometryFactory.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeVisualObject.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeGeometry.ts","webpack://bitcoin-3d/./packages/chili-three/src/highlightable.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeHighlighter.ts","webpack://bitcoin-3d/./packages/chili-three/src/cameraController.ts","webpack://bitcoin-3d/./packages/chili-three/src/viewGizmo.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeView.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeVisualContext.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeViewEventHandler.ts","webpack://bitcoin-3d/./packages/chili-three/src/meshExporter.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeVisual.ts","webpack://bitcoin-3d/./packages/chili-three/src/threeVisualFactory.ts"],"sourcesContent":["// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { Material, MathUtils, Matrix4, PhongMaterial, PhysicalMaterial, Texture, XYZ } from \"chili-core\";\nimport {\n    Box3,\n    Camera,\n    DoubleSide,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    RepeatWrapping,\n    TextureLoader,\n    Color as ThreeColor,\n    MeshLambertMaterial as ThreeLambertMaterial,\n    Matrix4 as ThreeMatrix4,\n    MeshPhongMaterial as ThreePhoneMaterial,\n    MeshPhysicalMaterial as ThreePhysicalMaterial,\n    Vector3,\n    Vector3Like,\n} from \"three\";\n\nexport class ThreeHelper {\n    static toMatrix(matrix: ThreeMatrix4) {\n        return Matrix4.fromArray(matrix.toArray());\n    }\n\n    static fromMatrix(matrix: Matrix4) {\n        return new ThreeMatrix4().fromArray(matrix.toArray());\n    }\n\n    static toXYZ(vector: Vector3): XYZ {\n        return new XYZ(vector.x, vector.y, vector.z);\n    }\n\n    static fromXYZ(vector: Vector3Like): Vector3 {\n        return new Vector3(vector.x, vector.y, vector.z);\n    }\n\n    static isPerspectiveCamera(camera: Camera): camera is PerspectiveCamera {\n        return (camera as PerspectiveCamera).isPerspectiveCamera;\n    }\n\n    static isOrthographicCamera(camera: Camera): camera is OrthographicCamera {\n        return (camera as OrthographicCamera).isOrthographicCamera;\n    }\n\n    static fromColor(color: number | string): ThreeColor {\n        return new ThreeColor(color);\n    }\n\n    static toColor(color: ThreeColor): number {\n        return color.getHex();\n    }\n\n    static findGroupIndex(groups: { start: number; count: number }[], subIndex: number) {\n        for (let i = 0; i < groups.length; i++) {\n            if (subIndex >= groups[i].start && subIndex < groups[i].start + groups[i].count) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n\n    static transformVector(matrix: ThreeMatrix4, vector: Vector3) {\n        let array = matrix.elements;\n        let x = vector.x * array[0] + vector.y * array[4] + vector.z * array[8];\n        let y = vector.x * array[1] + vector.y * array[5] + vector.z * array[9];\n        let z = vector.x * array[2] + vector.y * array[6] + vector.z * array[10];\n        return new Vector3(x, y, z);\n    }\n\n    static getBoundingBox(object: Object3D) {\n        const box = new Box3();\n        box.setFromObject(object);\n        if (box.isEmpty()) {\n            return undefined;\n        }\n        return { min: ThreeHelper.toXYZ(box.min), max: ThreeHelper.toXYZ(box.max) };\n    }\n\n    static boxCorners(box: Box3) {\n        let min = box.min;\n        let max = box.max;\n        return [\n            new Vector3(min.x, min.y, min.z),\n            new Vector3(max.x, min.y, min.z),\n            new Vector3(max.x, max.y, min.z),\n            new Vector3(min.x, max.y, min.z),\n            new Vector3(min.x, min.y, max.z),\n            new Vector3(max.x, min.y, max.z),\n            new Vector3(max.x, max.y, max.z),\n            new Vector3(min.x, max.y, max.z),\n        ];\n    }\n\n    static loadTexture(item: Texture | undefined) {\n        if (!item?.image) {\n            return null;\n        }\n\n        let map = new TextureLoader().load(item.image);\n        map.wrapS = RepeatWrapping;\n        map.wrapT = RepeatWrapping;\n        map.center.set(0.5, 0.5);\n        map.repeat.set(item.repeat.x, item.repeat.y);\n        map.rotation = MathUtils.degToRad(item.rotation);\n        return map;\n    }\n\n    static parsePhysicalMaterial(material: PhysicalMaterial) {\n        return new ThreePhysicalMaterial({\n            color: material.color,\n            side: DoubleSide,\n            transparent: true,\n            name: material.name,\n            opacity: material.opacity,\n            map: this.loadTexture(material.map),\n            roughness: material.roughness,\n            metalness: material.metalness,\n            bumpMap: this.loadTexture(material.bumpMap),\n            normalMap: this.loadTexture(material.normalMap),\n            emissiveMap: this.loadTexture(material.emissiveMap),\n            roughnessMap: this.loadTexture(material.roughnessMap),\n            metalnessMap: this.loadTexture(material.metalnessMap),\n        });\n    }\n\n    static parsePhongMaterial(material: PhongMaterial) {\n        return new ThreePhoneMaterial({\n            color: material.color,\n            side: DoubleSide,\n            transparent: true,\n            name: material.name,\n            opacity: material.opacity,\n            map: this.loadTexture(material.map),\n            specularMap: this.loadTexture(material.specularMap),\n            shininess: material.shininess,\n            emissive: ThreeHelper.fromColor(material.emissive),\n            emissiveMap: this.loadTexture(material.emissiveMap),\n        });\n    }\n\n    static parseBasicMaterial(material: Material) {\n        return new ThreeLambertMaterial({\n            color: material.color,\n            side: DoubleSide,\n            transparent: true,\n            name: material.name,\n            opacity: material.opacity,\n            map: this.loadTexture(material.map),\n        });\n    }\n\n    static parseToThreeMaterial(material: Material) {\n        if (material instanceof PhysicalMaterial) {\n            return this.parsePhysicalMaterial(material);\n        }\n\n        if (material instanceof PhongMaterial) {\n            return this.parsePhongMaterial(material);\n        }\n\n        return this.parseBasicMaterial(material);\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { getCurrentApplication, VisualConfig, VisualItemConfig } from \"chili-core\";\nimport { DoubleSide, MeshLambertMaterial } from \"three\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { ThreeHelper } from \"./threeHelper\";\n\nexport const defaultEdgeMaterial = new LineMaterial({\n    linewidth: 1,\n    color: VisualConfig.defaultEdgeColor,\n    side: DoubleSide,\n    polygonOffset: true,\n    polygonOffsetFactor: -2,\n    polygonOffsetUnits: -2,\n});\nVisualConfig.onPropertyChanged((property: keyof VisualItemConfig) => {\n    if (property === \"defaultEdgeColor\") {\n        defaultEdgeMaterial.color.set(VisualConfig.defaultEdgeColor);\n        getCurrentApplication()?.views.forEach((x) => x.update());\n    }\n});\n\nexport const hilightEdgeMaterial = new LineMaterial({\n    linewidth: 3,\n    color: ThreeHelper.fromColor(VisualConfig.highlightEdgeColor),\n    side: DoubleSide,\n    polygonOffset: true,\n    polygonOffsetFactor: -4,\n    polygonOffsetUnits: -4,\n});\n\nexport const hilightDashedEdgeMaterial = new LineMaterial({\n    linewidth: 3,\n    color: ThreeHelper.fromColor(VisualConfig.highlightEdgeColor),\n    side: DoubleSide,\n    polygonOffset: true,\n    polygonOffsetFactor: -4,\n    polygonOffsetUnits: -4,\n    dashed: true,\n    dashScale: 100,\n    dashSize: 100,\n    gapSize: 100,\n});\n\nexport const selectedEdgeMaterial = new LineMaterial({\n    linewidth: 3,\n    color: ThreeHelper.fromColor(VisualConfig.selectedEdgeColor),\n    side: DoubleSide,\n    polygonOffset: true,\n    polygonOffsetFactor: -4,\n    polygonOffsetUnits: -4,\n});\n\nexport const faceTransparentMaterial = new MeshLambertMaterial({\n    transparent: true,\n    side: DoubleSide,\n    color: ThreeHelper.fromColor(VisualConfig.selectedFaceColor),\n    opacity: 0.1,\n});\n\nexport const faceColoredMaterial = new MeshLambertMaterial({\n    side: DoubleSide,\n    color: ThreeHelper.fromColor(VisualConfig.highlightFaceColor),\n});\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nexport class Constants {\n    static readonly RaycasterThreshold = 10;\n    static readonly Layers = Object.freeze({\n        Default: 0,\n        Wireframe: 1,\n        Solid: 2,\n        Isolation: 30,\n    });\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { EdgeMeshData, FaceMeshData, LineType, MeshLike, VertexMeshData } from \"chili-core\";\nimport {\n    AlwaysDepth,\n    BufferAttribute,\n    BufferGeometry,\n    DoubleSide,\n    Float32BufferAttribute,\n    LineBasicMaterial,\n    Mesh,\n    MeshLambertMaterial,\n    Points,\n    PointsMaterial,\n} from \"three\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\n\nexport class ThreeGeometryFactory {\n    static createVertexGeometry(data: VertexMeshData) {\n        let buff = ThreeGeometryFactory.createVertexBufferGeometry(data);\n        let material = ThreeGeometryFactory.createVertexMaterial(data);\n        this.setColor(buff, data, material);\n\n        material.depthFunc = AlwaysDepth;\n        return new Points(buff, material);\n    }\n\n    static createVertexMaterial(data: VertexMeshData) {\n        return new PointsMaterial({\n            size: data.size,\n            sizeAttenuation: false,\n        });\n    }\n\n    static createFaceGeometry(data: FaceMeshData, opacity?: number) {\n        let buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\n        let material = ThreeGeometryFactory.createMeshMaterial(opacity);\n        this.setColor(buff, data, material);\n\n        return new Mesh(buff, material);\n    }\n\n    static createMeshMaterial(opacity: number | undefined) {\n        let material = new MeshLambertMaterial({ side: DoubleSide });\n        if (opacity !== undefined) {\n            material.transparent = true;\n            material.opacity = opacity;\n        }\n        return material;\n    }\n\n    static setColor(\n        buffer: BufferGeometry,\n        data: { color?: number | number[] },\n        material: MeshLambertMaterial | PointsMaterial | LineMaterial | LineBasicMaterial,\n    ) {\n        if (typeof data.color === \"number\") {\n            material.color.set(data.color);\n        } else if (Array.isArray(data.color)) {\n            material.vertexColors = true;\n            buffer.setAttribute(\"color\", new Float32BufferAttribute(data.color, 3));\n        }\n    }\n\n    static createFaceBufferGeometry(data: MeshLike) {\n        let buff = new BufferGeometry();\n        buff.setAttribute(\"position\", new BufferAttribute(data.position, 3));\n        buff.setAttribute(\"normal\", new BufferAttribute(data.normal, 3));\n        buff.setAttribute(\"uv\", new BufferAttribute(data.uv, 2));\n        if (data.index && data.index.length > 0) buff.setIndex(new BufferAttribute(data.index, 1));\n        buff.computeBoundingBox();\n        return buff;\n    }\n\n    static createEdgeGeometry(data: EdgeMeshData) {\n        let buff = this.createEdgeBufferGeometry(data);\n        let material = ThreeGeometryFactory.createEdgeMaterial(data);\n        this.setColor(buff, data, material);\n        return new LineSegments2(buff, material).computeLineDistances();\n    }\n\n    static createEdgeMaterial(data: EdgeMeshData) {\n        let material = new LineMaterial({\n            linewidth: data.lineWidth ?? 1,\n            polygonOffset: true,\n            polygonOffsetFactor: -4,\n            polygonOffsetUnits: -4,\n        });\n        if (data.lineType === LineType.Dash) {\n            material.dashed = true;\n            material.dashScale = 100;\n            material.dashSize = 100;\n            material.gapSize = 100;\n        }\n        return material;\n    }\n\n    static createEdgeBufferGeometry(data: EdgeMeshData) {\n        let buff = new LineSegmentsGeometry();\n        buff.setPositions(data.position);\n        buff.computeBoundingBox();\n        return buff;\n    }\n\n    static createVertexBufferGeometry(data: VertexMeshData) {\n        let buff = new BufferGeometry();\n        buff.setAttribute(\"position\", new BufferAttribute(data.position, 3));\n        buff.computeBoundingBox();\n        return buff;\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport {\n    BoundingBox,\n    ComponentNode,\n    GroupNode,\n    IShape,\n    ISubShape,\n    IVisualObject,\n    Matrix4,\n    MeshNode,\n    ShapeMeshRange,\n    ShapeType,\n    VisualConfig,\n    VisualNode,\n} from \"chili-core\";\nimport {\n    BufferAttribute,\n    BufferGeometry,\n    DoubleSide,\n    Group,\n    Material,\n    Mesh,\n    MeshLambertMaterial,\n    Object3D,\n} from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\nimport { defaultEdgeMaterial, hilightEdgeMaterial } from \"./common\";\nimport { Constants } from \"./constants\";\nimport { IHighlightable } from \"./highlightable\";\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\nimport { ThreeHelper } from \"./threeHelper\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\n\nconst HighlightFaceMaterial = new MeshLambertMaterial({\n    color: ThreeHelper.fromColor(VisualConfig.highlightFaceColor),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.56,\n});\n\nexport abstract class ThreeVisualObject extends Object3D implements IVisualObject {\n    get transform() {\n        return ThreeHelper.toMatrix(this.matrix);\n    }\n    set transform(value: Matrix4) {\n        this.matrix.fromArray(value.toArray());\n    }\n\n    private _node: VisualNode;\n    get node(): VisualNode {\n        return this._node;\n    }\n\n    worldTransform(): Matrix4 {\n        return ThreeHelper.toMatrix(this.matrixWorld);\n    }\n\n    constructor(node: VisualNode) {\n        super();\n        this._node = node;\n        this.matrixAutoUpdate = false;\n        this.visible = node.visible && node.parentVisible;\n        this.transform = node.transform;\n        node.onPropertyChanged(this.handlePropertyChanged);\n    }\n\n    private readonly handlePropertyChanged = (property: keyof VisualNode) => {\n        if (property === \"transform\") {\n            this.transform = this.node.transform;\n        }\n    };\n\n    boundingBox(): BoundingBox | undefined {\n        return ThreeHelper.getBoundingBox(this);\n    }\n\n    dispose() {\n        this.node.removePropertyChanged(this.handlePropertyChanged);\n        this._node = null as any;\n    }\n\n    abstract getSubShapeAndIndex(\n        shapeType: \"face\" | \"edge\",\n        subVisualIndex: number,\n    ): {\n        shape: IShape | undefined;\n        subShape: ISubShape | undefined;\n        index: number;\n        transform?: Matrix4;\n        groups: ShapeMeshRange[];\n    };\n\n    abstract subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[];\n\n    abstract wholeVisual(): (Mesh | LineSegments2)[];\n}\n\nexport class ThreeMeshObject extends ThreeVisualObject implements IHighlightable {\n    private _mesh: LineSegments2 | Mesh | Line2;\n    private material: Material | Material[];\n\n    get mesh() {\n        return this._mesh;\n    }\n\n    constructor(\n        readonly context: ThreeVisualContext,\n        readonly meshNode: MeshNode,\n    ) {\n        super(meshNode);\n        this._mesh = this.createMesh();\n        this.material = this._mesh.material;\n        this.add(this._mesh);\n        meshNode.onPropertyChanged(this.handleGeometryPropertyChanged);\n    }\n\n    highlight() {\n        if (this._mesh instanceof Mesh) {\n            this._mesh.material = HighlightFaceMaterial;\n        }\n\n        if (this._mesh instanceof LineSegments2) {\n            this._mesh.material = hilightEdgeMaterial;\n        }\n    }\n\n    unhighlight() {\n        if (this._mesh instanceof Mesh) {\n            this._mesh.material = this.material;\n        }\n\n        if (this._mesh instanceof LineSegments2) {\n            this._mesh.material = this.material as LineMaterial;\n        }\n    }\n\n    getSubShapeAndIndex(\n        shapeType: \"face\" | \"edge\",\n        subVisualIndex: number,\n    ): {\n        shape: IShape | undefined;\n        subShape: ISubShape | undefined;\n        index: number;\n        groups: ShapeMeshRange[];\n    } {\n        return {\n            shape: undefined,\n            subShape: undefined,\n            index: -1,\n            groups: [],\n        };\n    }\n\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\n        return [];\n    }\n\n    private createMesh() {\n        switch (this.meshNode.mesh.meshType) {\n            case \"linesegments\":\n                return this.newLineSegments();\n            case \"surface\":\n                return this.newMesh();\n            default:\n                throw new Error(\"Unknown mesh type\");\n        }\n    }\n\n    private readonly handleGeometryPropertyChanged = (property: keyof MeshNode) => {\n        if (property === \"mesh\") {\n            this.disposeMesh();\n            this._mesh = this.createMesh();\n            this.add(this._mesh);\n        } else if (property === \"materialId\" && this._mesh instanceof Mesh) {\n            this.material = this.context.getMaterial(this.meshNode.materialId);\n            this._mesh.material = this.material;\n        }\n    };\n\n    private newMesh() {\n        const buff = new BufferGeometry();\n        buff.setAttribute(\"position\", new BufferAttribute(this.meshNode.mesh.position!, 3));\n        if (this.meshNode.mesh.normal)\n            buff.setAttribute(\"normal\", new BufferAttribute(this.meshNode.mesh.normal, 3));\n        if (this.meshNode.mesh.uv) buff.setAttribute(\"uv\", new BufferAttribute(this.meshNode.mesh.uv, 2));\n        if (this.meshNode.mesh.index) buff.setIndex(new BufferAttribute(this.meshNode.mesh.index, 1));\n        if (this.meshNode.mesh.groups.length > 1) buff.groups = this.meshNode.mesh.groups;\n        buff.computeBoundingBox();\n        const mesh = new Mesh(buff, this.context.getMaterial(this.meshNode.materialId));\n        mesh.layers.set(Constants.Layers.Solid);\n        return mesh;\n    }\n\n    private newLineSegments() {\n        const material = new LineMaterial({\n            linewidth: 1,\n            color: this.meshNode.mesh.color as number,\n            side: DoubleSide,\n        });\n        const buff = new LineSegmentsGeometry();\n        buff.setPositions(this.meshNode.mesh.position!);\n        buff.computeBoundingBox();\n        const line = new LineSegments2(buff, material);\n        line.layers.set(Constants.Layers.Wireframe);\n        return line;\n    }\n\n    private newLine() {\n        const material = new LineMaterial({\n            linewidth: 1,\n            color: this.meshNode.mesh.color as number,\n            side: DoubleSide,\n        });\n        const geometry = new LineGeometry();\n        geometry.setPositions(this.meshNode.mesh.position!);\n        geometry.computeBoundingBox();\n        const line = new Line2(geometry, material);\n        line.layers.set(Constants.Layers.Wireframe);\n        return line;\n    }\n\n    override wholeVisual() {\n        return [this.mesh];\n    }\n\n    private disposeMesh() {\n        if (this._mesh instanceof LineSegments2 || this._mesh instanceof Line2) {\n            this._mesh.material.dispose();\n        }\n        this._mesh.geometry?.dispose();\n    }\n\n    override dispose(): void {\n        super.dispose();\n        this.meshNode.removePropertyChanged(this.handleGeometryPropertyChanged);\n        this.disposeMesh();\n    }\n}\n\nexport class GroupVisualObject extends Group implements IVisualObject {\n    get transform() {\n        return ThreeHelper.toMatrix(this.matrix);\n    }\n    set transform(value: Matrix4) {\n        this.matrix.fromArray(value.toArray());\n    }\n\n    worldTransform(): Matrix4 {\n        return ThreeHelper.toMatrix(this.matrixWorld);\n    }\n\n    constructor(private readonly groupNode: GroupNode) {\n        super();\n        this.matrixAutoUpdate = false;\n        this.transform = groupNode.transform;\n        groupNode.onPropertyChanged(this.handlePropertyChanged);\n    }\n\n    private readonly handlePropertyChanged = (property: keyof GroupNode) => {\n        if (property === \"transform\") {\n            this.transform = this.groupNode.transform;\n        }\n    };\n\n    boundingBox(): BoundingBox | undefined {\n        return ThreeHelper.getBoundingBox(this);\n    }\n\n    dispose() {\n        this.groupNode.removePropertyChanged(this.handlePropertyChanged);\n    }\n}\n\nexport class ThreeComponentObject extends ThreeVisualObject implements IHighlightable {\n    private _boundbox?: LineSegments2;\n    private _edges?: LineSegments2;\n    private _faces?: Mesh;\n    private _linesegments?: LineSegments2;\n    private _surfaces?: Mesh;\n\n    get edges() {\n        return this._edges;\n    }\n\n    get faces() {\n        return this._faces;\n    }\n\n    get linesegments() {\n        return this._linesegments;\n    }\n\n    get surfaces() {\n        return this._surfaces;\n    }\n\n    constructor(\n        readonly componentNode: ComponentNode,\n        readonly context: ThreeVisualContext,\n    ) {\n        super(componentNode);\n        this.initEdges();\n        this.initFaces();\n        this.initLinesegments();\n        this.initSurfaces();\n    }\n\n    private initEdges() {\n        const data = this.componentNode.component.mesh.edge;\n        if (!data || data.position.length === 0) {\n            return;\n        }\n\n        const buff = ThreeGeometryFactory.createEdgeBufferGeometry(data);\n        this._edges = new LineSegments2(buff, defaultEdgeMaterial);\n        this._edges.layers.set(Constants.Layers.Wireframe);\n        this.add(this._edges);\n    }\n\n    private initFaces() {\n        const data = this.componentNode.component.mesh.face;\n        if (!data || data.position.length === 0) {\n            return;\n        }\n\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\n        if (data.groups.length > 1) buff.groups = data.groups;\n        const materials = this.context.getMaterial(this.componentNode.component.mesh.faceMaterials);\n        this._faces = new Mesh(buff, materials);\n        this._faces.layers.set(Constants.Layers.Solid);\n        this.add(this._faces);\n    }\n\n    initSurfaces() {\n        const data = this.componentNode.component.mesh.surface;\n        if (!data || data.position?.length === 0) {\n            return;\n        }\n\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data as any);\n        if (data.groups.length > 1) buff.groups = data.groups;\n        const materials = this.context.getMaterial(this.componentNode.component.mesh.surfaceMaterials);\n        this._surfaces = new Mesh(buff, materials);\n        this._surfaces.layers.set(Constants.Layers.Solid);\n        this.add(this._surfaces);\n    }\n\n    initLinesegments() {\n        const data = this.componentNode.component.mesh.linesegments;\n        if (!data || data.position?.length === 0) {\n            return;\n        }\n\n        let buff = new LineSegmentsGeometry();\n        buff.setPositions(data.position!);\n        buff.computeBoundingBox();\n        this._linesegments = new LineSegments2(buff, defaultEdgeMaterial);\n        this._linesegments.layers.set(Constants.Layers.Wireframe);\n        this.add(this._linesegments);\n    }\n\n    override boundingBox(): BoundingBox | undefined {\n        return this.componentNode.component.boundingBox;\n    }\n\n    highlight(): void {\n        if (!this._boundbox) {\n            const box = this.componentNode.component.boundingBox;\n            if (!box) {\n                return;\n            }\n\n            const geometry = new LineSegmentsGeometry();\n            geometry.setPositions(BoundingBox.wireframe(box).position);\n            this._boundbox = new LineSegments2(geometry, hilightEdgeMaterial);\n            this.add(this._boundbox);\n        }\n\n        this._boundbox.visible = true;\n    }\n\n    unhighlight(): void {\n        if (this._boundbox) {\n            this._boundbox.visible = false;\n        }\n    }\n\n    override getSubShapeAndIndex(shapeType: \"face\" | \"edge\", subVisualIndex: number) {\n        const range =\n            shapeType === \"face\"\n                ? this.componentNode.component.mesh.face.range\n                : this.componentNode.component.mesh.edge.range;\n        const index = ThreeHelper.findGroupIndex(range, subVisualIndex);\n        if (index !== undefined) {\n            return {\n                shape: range[index].shape,\n                subShape: range[index].shape,\n                transform: range[index].transform,\n                index,\n                groups: range,\n            };\n        }\n\n        return {\n            shape: undefined,\n            subShape: undefined,\n            transform: undefined,\n            index: -1,\n            groups: [],\n        };\n    }\n\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\n        const shapes: (Mesh | LineSegments2 | undefined)[] = [];\n\n        const isWhole =\n            shapeType === ShapeType.Shape ||\n            ShapeType.hasCompound(shapeType) ||\n            ShapeType.hasCompoundSolid(shapeType) ||\n            ShapeType.hasSolid(shapeType);\n\n        if (isWhole || ShapeType.hasEdge(shapeType) || ShapeType.hasWire(shapeType)) {\n            shapes.push(this.edges);\n        }\n\n        if (isWhole || ShapeType.hasFace(shapeType) || ShapeType.hasShell(shapeType)) {\n            shapes.push(this.faces);\n        }\n\n        return shapes.filter((x) => x !== undefined);\n    }\n\n    override wholeVisual(): (Mesh | LineSegments2)[] {\n        return [this.edges, this.faces, this.linesegments, this.surfaces].filter((x) => x !== undefined);\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport {\n    BoundingBox,\n    EdgeMeshData,\n    FaceMeshData,\n    GeometryNode,\n    IShape,\n    ISubShape,\n    IVisualGeometry,\n    Matrix4,\n    ShapeMeshRange,\n    ShapeNode,\n    ShapeType,\n} from \"chili-core\";\nimport { MeshUtils } from \"chili-geo\";\nimport { Material, Mesh, MeshLambertMaterial } from \"three\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\nimport { defaultEdgeMaterial } from \"./common\";\nimport { Constants } from \"./constants\";\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\nimport { ThreeHelper } from \"./threeHelper\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\nimport { ThreeVisualObject } from \"./threeVisualObject\";\n\nexport class ThreeGeometry extends ThreeVisualObject implements IVisualGeometry {\n    private _faceMaterial: Material | Material[];\n    private _edges?: LineSegments2;\n    private _faces?: Mesh;\n\n    constructor(\n        readonly geometryNode: GeometryNode,\n        readonly context: ThreeVisualContext,\n    ) {\n        super(geometryNode);\n        this._faceMaterial = context.getMaterial(geometryNode.materialId);\n        this.generateShape();\n        geometryNode.onPropertyChanged(this.handleGeometryPropertyChanged);\n    }\n\n    changeFaceMaterial(material: Material | Material[]) {\n        if (this._faces) {\n            this._faceMaterial = material;\n            this._faces.material = material;\n        }\n    }\n\n    box() {\n        return this._faces?.geometry.boundingBox ?? this._edges?.geometry.boundingBox;\n    }\n\n    override boundingBox(): BoundingBox | undefined {\n        const box = this._faces?.geometry.boundingBox ?? this._edges?.geometry.boundingBox;\n        if (!box) return undefined;\n\n        return {\n            min: ThreeHelper.toXYZ(box.min),\n            max: ThreeHelper.toXYZ(box.max),\n        };\n    }\n\n    private readonly handleGeometryPropertyChanged = (property: keyof GeometryNode) => {\n        if (property === \"materialId\") {\n            this.changeFaceMaterial(this.context.getMaterial(this.geometryNode.materialId));\n        } else if ((property as keyof ShapeNode) === \"shape\") {\n            this.removeMeshes();\n            this.generateShape();\n        }\n    };\n\n    private generateShape() {\n        const mesh = this.geometryNode.mesh;\n        if (mesh?.faces?.position.length) this.initFaces(mesh.faces);\n        if (mesh?.edges?.position.length) this.initEdges(mesh.edges);\n    }\n\n    override dispose() {\n        super.dispose();\n        this.geometryNode.removePropertyChanged(this.handleGeometryPropertyChanged);\n        this.removeMeshes();\n    }\n\n    private removeMeshes() {\n        if (this._edges) {\n            this.remove(this._edges);\n            this._edges.geometry.dispose();\n            this._edges = null as any;\n        }\n        if (this._faces) {\n            this.remove(this._faces);\n            this._faces.geometry.dispose();\n            this._faces = null as any;\n        }\n    }\n\n    private initEdges(data: EdgeMeshData) {\n        const buff = ThreeGeometryFactory.createEdgeBufferGeometry(data);\n        this._edges = new LineSegments2(buff, defaultEdgeMaterial);\n        this._edges.layers.set(Constants.Layers.Wireframe);\n        this.add(this._edges);\n    }\n\n    private initFaces(data: FaceMeshData) {\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\n        if (data.groups.length > 1) buff.groups = data.groups;\n        this._faces = new Mesh(buff, this._faceMaterial);\n        this._faces.layers.set(Constants.Layers.Solid);\n        this.add(this._faces);\n    }\n\n    setFacesMateiralTemperary(material: MeshLambertMaterial) {\n        if (this._faces) this._faces.material = material;\n    }\n\n    setEdgesMateiralTemperary(material: LineMaterial) {\n        if (this._edges) this._edges.material = material;\n    }\n\n    removeTemperaryMaterial(): void {\n        if (this._edges) this._edges.material = defaultEdgeMaterial;\n        if (this._faces) this._faces.material = this._faceMaterial;\n    }\n\n    cloneSubEdge(index: number) {\n        const positions = MeshUtils.subEdge(this.geometryNode.mesh.edges!, index);\n        if (!positions) return undefined;\n\n        const buff = new LineSegmentsGeometry();\n        buff.setPositions(positions);\n        buff.applyMatrix4(this.matrixWorld);\n\n        return new LineSegments2(buff, defaultEdgeMaterial);\n    }\n\n    cloneSubFace(index: number) {\n        const mesh = MeshUtils.subFace(this.geometryNode.mesh.faces!, index);\n        if (!mesh) return undefined;\n\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(mesh);\n        buff.applyMatrix4(this.matrixWorld);\n\n        return new Mesh(buff, this._faceMaterial);\n    }\n\n    faces() {\n        return this._faces;\n    }\n\n    edges() {\n        return this._edges;\n    }\n\n    override getSubShapeAndIndex(shapeType: \"face\" | \"edge\", subVisualIndex: number) {\n        let subShape: ISubShape | undefined = undefined;\n        let transform: Matrix4 | undefined = undefined;\n        let index: number = -1;\n        let groups: ShapeMeshRange[] | undefined = undefined;\n        if (shapeType === \"edge\") {\n            groups = this.geometryNode.mesh.edges?.range;\n            if (groups) {\n                index = ThreeHelper.findGroupIndex(groups, subVisualIndex)!;\n                subShape = groups[index].shape;\n                transform = groups[index].transform;\n            }\n        } else {\n            groups = this.geometryNode.mesh.faces?.range;\n            if (groups) {\n                index = ThreeHelper.findGroupIndex(groups, subVisualIndex)!;\n                subShape = groups[index].shape;\n                transform = groups[index].transform;\n            }\n        }\n\n        let shape: IShape | undefined = subShape;\n        if (this.geometryNode instanceof ShapeNode) {\n            shape = this.geometryNode.shape.value;\n        }\n        return { transform, shape, subShape, index, groups: groups ?? [] };\n    }\n\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\n        const shapes: (Mesh | LineSegments2 | undefined)[] = [];\n\n        const isWhole =\n            shapeType === ShapeType.Shape ||\n            ShapeType.hasCompound(shapeType) ||\n            ShapeType.hasCompoundSolid(shapeType) ||\n            ShapeType.hasSolid(shapeType);\n\n        if (isWhole || ShapeType.hasEdge(shapeType) || ShapeType.hasWire(shapeType)) {\n            shapes.push(this.edges());\n        }\n\n        if (isWhole || ShapeType.hasFace(shapeType) || ShapeType.hasShell(shapeType)) {\n            shapes.push(this.faces());\n        }\n\n        return shapes.filter((x) => x !== undefined);\n    }\n\n    override wholeVisual(): (Mesh | LineSegments2)[] {\n        return [this.edges(), this.faces()].filter((x) => x !== undefined);\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 Licensettt.\n// See LICENSE file in the project root for full license information.\n\nexport interface IHighlightable {\n    highlight(): void;\n    unhighlight(): void;\n}\n\nexport namespace IHighlightable {\n    export function is(value: any): value is IHighlightable {\n        return value && typeof value.highlight === \"function\" && typeof value.unhighlight === \"function\";\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { IDisposable, IHighlighter, ShapeMeshData, ShapeType, VisualState } from \"chili-core\";\nimport { MeshUtils } from \"chili-geo\";\nimport { Group, Mesh, Points } from \"three\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\nimport {\n    faceColoredMaterial,\n    faceTransparentMaterial,\n    hilightEdgeMaterial,\n    selectedEdgeMaterial,\n} from \"./common\";\nimport { ThreeGeometry } from \"./threeGeometry\";\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\nimport { ThreeMeshObject, ThreeVisualObject } from \"./threeVisualObject\";\nimport { IHighlightable } from \"./highlightable\";\n\nexport class GeometryState {\n    private readonly _states: Map<string, [VisualState, LineSegments2 | undefined]> = new Map();\n\n    constructor(\n        readonly highlighter: ThreeHighlighter,\n        readonly visual: ThreeVisualObject,\n    ) {}\n\n    getState(type: ShapeType, index?: number) {\n        const key = this.state_key(type, index);\n        return this._states.get(key)?.[0];\n    }\n\n    private state_key(type: ShapeType, index?: number) {\n        return `${type}_${index}`;\n    }\n\n    addState(state: VisualState, type: ShapeType, index: number[]) {\n        this.updateState(\"add\", state, type, index);\n    }\n\n    removeState(state: VisualState, type: ShapeType, index: number[]) {\n        this.updateState(\"remove\", state, type, index);\n    }\n\n    private updateState(method: \"add\" | \"remove\", state: VisualState, type: ShapeType, index: number[]) {\n        if (ShapeType.isWhole(type)) {\n            this.setWholeState(method, state, type);\n        } else if (index.length > 0) {\n            this.setSubGeometryState(method, state, type, index);\n        }\n    }\n\n    private setWholeState(method: \"add\" | \"remove\", state: VisualState, type: ShapeType) {\n        const key = this.state_key(type);\n        let [_oldState, newState] = this.updateStates(key, method, state);\n        if (this.visual instanceof ThreeGeometry) {\n            if (newState === VisualState.normal) {\n                this.visual.removeTemperaryMaterial();\n            } else if (VisualState.hasState(newState, VisualState.edgeHighlight)) {\n                this.visual.setEdgesMateiralTemperary(hilightEdgeMaterial);\n            } else if (VisualState.hasState(newState, VisualState.edgeSelected)) {\n                this.visual.setEdgesMateiralTemperary(selectedEdgeMaterial);\n            } else if (VisualState.hasState(newState, VisualState.faceTransparent)) {\n                this.visual.removeTemperaryMaterial();\n                this.visual.setFacesMateiralTemperary(faceTransparentMaterial);\n            } else if (VisualState.hasState(newState, VisualState.faceColored)) {\n                this.visual.removeTemperaryMaterial();\n                this.visual.setFacesMateiralTemperary(faceColoredMaterial);\n            }\n        } else if (IHighlightable.is(this.visual)) {\n            if (newState !== VisualState.normal) {\n                this.visual.highlight();\n            } else {\n                this.visual.unhighlight();\n            }\n        }\n\n        this._states.set(key, [newState, undefined]);\n    }\n\n    private updateStates(\n        key: string,\n        method: \"add\" | \"remove\",\n        state: VisualState,\n    ): [VisualState | undefined, VisualState] {\n        let oldState = this._states.get(key)?.[0];\n        let newState = oldState;\n        if (newState === undefined) {\n            if (method === \"remove\") return [undefined, VisualState.normal];\n            newState = state;\n        } else {\n            let func = method === \"add\" ? VisualState.addState : VisualState.removeState;\n            newState = func(newState, state);\n        }\n        return [oldState, newState];\n    }\n\n    resetState() {\n        this.highlighter.container.children.forEach((x) => {\n            (x as any).geometry?.dispose();\n        });\n        this.highlighter.container.clear();\n        if (this.visual instanceof ThreeGeometry) {\n            this.visual.removeTemperaryMaterial();\n        } else if (this.visual instanceof ThreeMeshObject) {\n            this.visual.unhighlight();\n        }\n        this._states.clear();\n    }\n\n    private setSubGeometryState(\n        method: \"add\" | \"remove\",\n        state: VisualState,\n        type: ShapeType,\n        index: number[],\n    ) {\n        const shouldRemoved: string[] = [];\n        index.forEach((i) => {\n            const key = this.state_key(type, i);\n            const [oldState, newState] = this.updateStates(key, method, state);\n            if (oldState !== undefined && newState === VisualState.normal) {\n                shouldRemoved.push(key);\n            } else {\n                this.addSubEdgeState(type, key, i, newState);\n            }\n        });\n\n        shouldRemoved.forEach((key) => {\n            const item = this._states.get(key)?.[1];\n            if (item) {\n                this.highlighter.container.remove(item);\n                item.geometry?.dispose();\n                this._states.delete(key);\n            }\n        });\n    }\n\n    private addSubEdgeState(type: ShapeType, key: string, i: number, newState: VisualState) {\n        const geometry = this.getOrCloneGeometry(type, key, i);\n        if (geometry && \"material\" in geometry) {\n            let material = VisualState.hasState(newState, VisualState.edgeHighlight)\n                ? hilightEdgeMaterial\n                : selectedEdgeMaterial;\n            geometry.material = material;\n            this._states.set(key, [newState, geometry]);\n        }\n    }\n\n    private getOrCloneGeometry(type: ShapeType, key: string, index: number) {\n        if (!(this.visual instanceof ThreeGeometry)) return undefined;\n\n        const geometry = this._states.get(key)?.[1];\n        if (geometry) return geometry;\n\n        let points: Float32Array | undefined = undefined;\n        if (ShapeType.hasFace(type) || ShapeType.hasShell(type)) {\n            points = MeshUtils.subFaceOutlines(this.visual.geometryNode.mesh.faces!, index);\n        }\n        if (points === undefined && (ShapeType.hasEdge(type) || ShapeType.hasWire(type))) {\n            points = MeshUtils.subEdge(this.visual.geometryNode.mesh.edges!, index);\n        }\n\n        if (!points) {\n            console.warn(`Invalid type ${type} for ${key}`);\n            return undefined;\n        }\n\n        const lineGeometry = new LineSegmentsGeometry();\n        lineGeometry.setPositions(points);\n        const segment = new LineSegments2(lineGeometry);\n        this.highlighter.container.add(segment);\n        segment.applyMatrix4(this.visual.matrixWorld);\n        return segment;\n    }\n}\n\nexport class ThreeHighlighter implements IHighlighter {\n    private readonly _stateMap = new Map<ThreeVisualObject, GeometryState>();\n    readonly container: Group;\n\n    constructor(readonly content: ThreeVisualContext) {\n        this.container = new Group();\n        this.container.name = \"highlighter\";\n        this.content.scene.add(this.container);\n    }\n\n    clear(): void {\n        this._stateMap.forEach((v, k) => {\n            this.resetState(k);\n        });\n        this._stateMap.clear();\n    }\n\n    resetState(geometry: ThreeVisualObject): void {\n        if (!this._stateMap.has(geometry)) return;\n        let geometryState = this._stateMap.get(geometry);\n        geometryState!.resetState();\n        this._stateMap.delete(geometry);\n    }\n\n    getState(shape: ThreeVisualObject, type: ShapeType, index?: number): VisualState | undefined {\n        if (this._stateMap.has(shape)) {\n            return this._stateMap.get(shape)!.getState(type, index);\n        }\n        return undefined;\n    }\n\n    addState(geometry: ThreeVisualObject, state: VisualState, type: ShapeType, ...index: number[]) {\n        let geometryState = this.getOrInitState(geometry);\n        geometryState.addState(state, type, index);\n    }\n\n    removeState(geometry: ThreeVisualObject, state: VisualState, type: ShapeType, ...index: number[]) {\n        let geometryState = this.getOrInitState(geometry);\n        geometryState.removeState(state, type, index);\n    }\n\n    private getOrInitState(geometry: ThreeVisualObject) {\n        let geometryState = this._stateMap.get(geometry);\n        if (!geometryState) {\n            geometryState = new GeometryState(this, geometry);\n            this._stateMap.set(geometry, geometryState);\n        }\n        return geometryState;\n    }\n\n    highlightMesh(...datas: ShapeMeshData[]): number {\n        let group = new Group();\n        datas.forEach((data) => {\n            if (ShapeMeshData.isVertex(data)) {\n                group.add(ThreeGeometryFactory.createVertexGeometry(data));\n            } else if (ShapeMeshData.isEdge(data)) {\n                group.add(ThreeGeometryFactory.createEdgeGeometry(data));\n            } else if (ShapeMeshData.isFace(data)) {\n                group.add(ThreeGeometryFactory.createFaceGeometry(data));\n            }\n        });\n        this.container.add(group);\n        return group.id;\n    }\n\n    removeHighlightMesh(id: number) {\n        let shape = this.container.getObjectById(id);\n        if (shape === undefined) return;\n        shape.children.forEach((x) => {\n            if (x instanceof Mesh || x instanceof LineSegments2 || x instanceof Points) {\n                x.geometry.dispose();\n                x.material.dispose();\n            }\n            if (IDisposable.isDisposable(x)) {\n                x.dispose();\n            }\n        });\n        shape.children.length = 0;\n        this.container.remove(shape);\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport {\n    CameraType,\n    ICameraController,\n    MathUtils,\n    Observable,\n    ViewMode,\n    VisualNode,\n    XYZLike,\n} from \"chili-core\";\nimport {\n    Box3,\n    Camera,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Quaternion,\n    Raycaster,\n    Sphere,\n    Vector3,\n} from \"three\";\nimport { Constants } from \"./constants\";\nimport { ThreeGeometry } from \"./threeGeometry\";\nimport { ThreeHelper } from \"./threeHelper\";\nimport { ThreeView } from \"./threeView\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\nimport { ThreeVisualObject } from \"./threeVisualObject\";\n\nconst DEG_TO_RAD = Math.PI / 180.0;\nconst ZOOM_SPEED_FACTOR = 0.1;\nconst ROTATE_SPEED_FACTOR = 0.5;\nconst PAN_SPEED_FACTOR = 0.002;\nconst CAMERA_FOV = 50;\nconst CAMERA_NEAR = 0.1;\nconst CAMERA_FAR = 1e6;\nconst MIN_CARME_TO_TARGET = 50;\n\nCamera.DEFAULT_UP = new Vector3(0, 0, 1);\n\nexport class CameraController extends Observable implements ICameraController {\n    private _width: number = 100;\n    private _height: number = 100;\n    private _target: Vector3 = new Vector3();\n    private _position: Vector3 = new Vector3(1500, 1500, 1500);\n    private _rotateCenter: Vector3 | undefined;\n    private _camera: PerspectiveCamera | OrthographicCamera;\n\n    get cameraType(): CameraType {\n        return this.getPrivateValue(\"cameraType\", \"perspective\");\n    }\n    set cameraType(value: CameraType) {\n        if (this.setProperty(\"cameraType\", value)) {\n            this._camera = this.createCamera(this._camera.near, this._camera.far);\n            if (this.camera instanceof OrthographicCamera) {\n                this.updateOrthographicCamera(this.camera);\n            }\n            this.updateCameraPosionTarget();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    set target(value: Vector3) {\n        this._target.copy(value);\n    }\n\n    get cameraPosition() {\n        return ThreeHelper.toXYZ(this._position);\n    }\n\n    get cameraTarget() {\n        return ThreeHelper.toXYZ(this._target);\n    }\n\n    get cameraUp() {\n        return ThreeHelper.toXYZ(this._camera.up);\n    }\n\n    get camera(): PerspectiveCamera | OrthographicCamera {\n        return this._camera;\n    }\n\n    constructor(readonly view: ThreeView) {\n        super();\n        this._camera = this.createCamera(CAMERA_NEAR, CAMERA_FAR);\n    }\n\n    private createCamera(near: number, far: number) {\n        let camera: PerspectiveCamera | OrthographicCamera;\n        if (this.cameraType === \"perspective\") {\n            camera = new PerspectiveCamera(CAMERA_FOV, this._width / this._height, near, far);\n        } else {\n            camera = new OrthographicCamera(\n                -this._width / 2,\n                this._width / 2,\n                this._height / 2,\n                -this._height / 2,\n                near,\n                far,\n            );\n        }\n        this.setCameraLayer(camera, this.view.mode);\n        return camera;\n    }\n\n    setCameraLayer(camera: Camera, mode: ViewMode) {\n        if (mode === ViewMode.wireframe) {\n            camera.layers.enable(Constants.Layers.Wireframe);\n            camera.layers.disable(Constants.Layers.Solid);\n        } else if (mode === ViewMode.solid) {\n            camera.layers.enable(Constants.Layers.Solid);\n            camera.layers.disable(Constants.Layers.Wireframe);\n        } else {\n            camera.layers.enableAll();\n        }\n    }\n\n    pan(dx: number, dy: number): void {\n        const ratio = PAN_SPEED_FACTOR * this._target.distanceTo(this._position);\n        const direction = this._target.clone().sub(this._position).normalize();\n        const hor = direction.clone().cross(this.camera.up).normalize();\n        const ver = hor.clone().cross(direction).normalize();\n        const vector = hor.multiplyScalar(-dx).add(ver.multiplyScalar(dy)).multiplyScalar(ratio);\n        this._target.add(vector);\n        this._position.add(vector);\n\n        this.updateCameraPosionTarget();\n    }\n\n    updateCameraPosionTarget() {\n        this._camera.position.copy(this._position);\n        this._camera.lookAt(this._target);\n        this._camera.updateProjectionMatrix();\n    }\n\n    setSize(width: number, height: number): void {\n        this._width = width;\n        this._height = height;\n        if (this.camera instanceof PerspectiveCamera) {\n            this.camera.aspect = width / height;\n        } else if (this.camera instanceof OrthographicCamera) {\n            this.updateOrthographicCamera(this.camera);\n        }\n        this.camera.updateProjectionMatrix();\n    }\n\n    private updateOrthographicCamera(camera: OrthographicCamera) {\n        const aspect = this._width / this._height;\n        let length = this._position.distanceTo(this._target);\n        let frustumHalfHeight = length * Math.tan((CAMERA_FOV * DEG_TO_RAD) / 2);\n        camera.left = -frustumHalfHeight * aspect;\n        camera.right = frustumHalfHeight * aspect;\n        camera.top = frustumHalfHeight;\n        camera.bottom = -frustumHalfHeight;\n    }\n\n    startRotate(x: number, y: number): void {\n        const box = new Box3();\n        const nodes = this.view.document.selection.getSelectedNodes();\n        if (nodes.length > 0) {\n            for (const node of nodes) {\n                const shape = this.view.document.visual.context.getVisual(node) as ThreeVisualObject;\n                box.expandByObject(shape);\n            }\n            this._rotateCenter = box.getCenter(new Vector3());\n            return;\n        }\n\n        const shape = this.view.detectVisual(x, y).at(0);\n        if (shape instanceof ThreeVisualObject) {\n            box.setFromObject(shape);\n            this._rotateCenter = box.getCenter(new Vector3());\n            return;\n        }\n\n        this._rotateCenter = undefined;\n    }\n\n    rotate(dx: number, dy: number): void {\n        const newRotation = this.getRotation(dx * ROTATE_SPEED_FACTOR, dy * ROTATE_SPEED_FACTOR);\n\n        this._camera.up.copy(new Vector3(0, 1, 0).applyQuaternion(newRotation));\n\n        const distance = this._position.distanceTo(this._target);\n        const eyeToCenter = new Vector3(0, 0, distance).applyQuaternion(newRotation);\n        let currentPosition = this._target.clone().add(eyeToCenter);\n\n        if (this._rotateCenter) {\n            const diffPosition = currentPosition.clone().sub(this._position);\n            const diffRotation = newRotation.clone().multiply(this._camera.quaternion.clone().invert());\n            const targetAfterTrans = this._rotateCenter\n                .clone()\n                .sub(this._position)\n                .applyQuaternion(diffRotation)\n                .add(diffPosition)\n                .add(this._position)\n                .sub(this._rotateCenter);\n\n            const currentCenter = this._target.clone().sub(targetAfterTrans);\n            currentPosition = currentCenter.clone().add(eyeToCenter);\n\n            this._target.copy(currentCenter);\n        }\n\n        this._position.copy(currentPosition);\n        this.updateCameraPosionTarget();\n    }\n\n    private getRotation(dx: number, dy: number) {\n        const rotationDy = new Quaternion().setFromAxisAngle(new Vector3(1, 0, 0), MathUtils.degToRad(-dy));\n        const tmpRotation = this._camera.quaternion.clone().multiply(rotationDy);\n        const tmpRotationInv = tmpRotation.clone().invert();\n        const rotationDx = new Quaternion().setFromAxisAngle(\n            new Vector3(0, 0, 1).applyQuaternion(tmpRotationInv),\n            MathUtils.degToRad(-dx),\n        );\n        return tmpRotation.clone().multiply(rotationDx);\n    }\n\n    fitContent(): void {\n        const context = this.view.document.visual.context as ThreeVisualContext;\n        const sphere = this.getBoundingSphere(context);\n        let fieldOfView = CAMERA_FOV / 2.0;\n        if (this._width < this._height) {\n            fieldOfView = (fieldOfView * this._width) / this._height;\n        }\n\n        const distance = Math.abs(sphere.radius / Math.sin(fieldOfView * DEG_TO_RAD));\n        const direction = this._target.clone().sub(this._position).normalize();\n        this._target.copy(sphere.center);\n        this._position.copy(this._target.clone().sub(direction.clone().multiplyScalar(distance)));\n\n        if (this._camera instanceof OrthographicCamera) {\n            this.updateOrthographicCamera(this._camera);\n        }\n\n        this.updateCameraNearFar();\n        this.updateCameraPosionTarget();\n    }\n\n    private getBoundingSphere(context: ThreeVisualContext) {\n        const sphere = new Sphere();\n        const shapes = this.view.document.selection\n            .getSelectedNodes()\n            .filter((x) => x instanceof VisualNode);\n        if (shapes.length === 0) {\n            new Box3().setFromObject(context.visualShapes).getBoundingSphere(sphere);\n            return sphere;\n        }\n\n        const box = new Box3();\n        for (let shape of shapes) {\n            let threeGeometry = context.getVisual(shape) as ThreeGeometry;\n            let boundingBox = new Box3().setFromObject(threeGeometry);\n            if (boundingBox) {\n                box.union(boundingBox);\n            }\n        }\n        box.getBoundingSphere(sphere);\n        return sphere;\n    }\n\n    zoom(x: number, y: number, delta: number): void {\n        const vector = this._target.clone().sub(this._position);\n\n        let zoomFactor = this.caclueZoomFactor(x, y, vector);\n        const scale = delta > 0 ? zoomFactor : -zoomFactor;\n        let mouse = this.mouseToWorld(x, y);\n        if (this._camera instanceof PerspectiveCamera) {\n            mouse = this.caculePerspectiveCameraMouse(vector, mouse);\n        }\n        const targetMoveVector = this._target.clone().sub(mouse).multiplyScalar(scale);\n        this._target.add(targetMoveVector);\n        this._position.copy(this._target.clone().sub(vector.clone().multiplyScalar(1 + scale)));\n        if (vector.length() < MIN_CARME_TO_TARGET) {\n            this._target = this._position\n                .clone()\n                .add(vector.clone().normalize().multiplyScalar(MIN_CARME_TO_TARGET));\n        }\n\n        if (this._camera instanceof OrthographicCamera) {\n            this.updateOrthographicCamera(this._camera);\n        }\n        this.updateCameraNearFar();\n        this.updateCameraPosionTarget();\n    }\n\n    private caclueZoomFactor(x: number, y: number, direction: Vector3) {\n        const raycaster = new Raycaster();\n        raycaster.setFromCamera(this.view.screenToCameraRect(x, y), this.camera);\n        const intersect = raycaster.intersectObjects(this.view.content.visualShapes.children).at(0)?.point;\n        let zoomFactor = ZOOM_SPEED_FACTOR;\n        if (intersect) {\n            zoomFactor = (ZOOM_SPEED_FACTOR * this._position.distanceTo(intersect)) / direction.length();\n        }\n        return zoomFactor;\n    }\n\n    private updateCameraNearFar() {\n        const distance = this._position.distanceTo(this._target);\n        if (distance < 1000.0) {\n            this.camera.near = 0.1;\n            this.camera.far = 10000.0;\n        } else if (distance < 100000.0) {\n            this.camera.near = 10;\n            this.camera.far = 1000000.0;\n        } else if (distance < 1000000.0) {\n            this.camera.near = 1000.0;\n            this.camera.far = 10000000.0;\n        } else {\n            this.camera.near = 10000.0;\n            this.camera.far = 100000000.0;\n        }\n    }\n\n    private caculePerspectiveCameraMouse(direction: Vector3, mouse: Vector3) {\n        const directionNormal = direction.clone().normalize();\n        const dot = mouse.clone().sub(this._position).dot(directionNormal);\n        const project = this._position.clone().add(directionNormal.clone().multiplyScalar(dot));\n        const length = (project.distanceTo(mouse) * direction.length()) / project.distanceTo(this._position);\n        const v = mouse.clone().sub(project).normalize().multiplyScalar(length);\n        mouse = this._target.clone().add(v);\n        return mouse;\n    }\n\n    lookAt(eye: XYZLike, target: XYZLike, up: XYZLike): void {\n        this._position.set(eye.x, eye.y, eye.z);\n        this._target.set(target.x, target.y, target.z);\n        this.camera.up.set(up.x, up.y, up.z);\n        this.updateCameraPosionTarget();\n    }\n\n    private mouseToWorld(mx: number, my: number) {\n        const x = (2.0 * mx) / this._width - 1;\n        const y = (-2.0 * my) / this._height + 1;\n        const dist = this._position.distanceTo(this._target);\n        const z = (this._camera.far + this._camera.near - 2 * dist) / (this._camera.near - this._camera.far);\n\n        return new Vector3(x, y, z).unproject(this._camera);\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { XYZ } from \"chili-core\";\nimport { Matrix4, Vector3 } from \"three\";\nimport { CameraController } from \"./cameraController\";\nimport { ThreeView } from \"./threeView\";\n\nconst MOUSE_LEFT = 1;\n\nconst options = {\n    size: 200,\n    padding: 16,\n    bubbleSizePrimary: 18,\n    bubbleSizeSeconday: 10,\n    showSecondary: true,\n    lineWidth: 2,\n    fontSize: \"24px\",\n    fontFamily: \"arial\",\n    fontColor: \"#151515\",\n    fontYAdjust: 0,\n    colors: {\n        x: [\"#f73c3c\", \"#942424\"],\n        y: [\"#6ccb26\", \"#417a17\"],\n        z: [\"#178cf0\", \"#0e5490\"],\n    },\n};\n\nexport interface Axis {\n    axis: string;\n    direction: Vector3;\n    size: number;\n    position: Vector3;\n    color: string[];\n    lineWidth?: number;\n    label?: string;\n}\n\nexport class ViewGizmo extends HTMLElement {\n    private readonly _axes: Axis[];\n    private readonly _center: Vector3;\n    private readonly _canvas: HTMLCanvasElement;\n    private readonly _context: CanvasRenderingContext2D;\n    readonly cameraController: CameraController;\n    private _canClick: boolean = true;\n    private _selectedAxis?: Axis;\n    private _mouse?: Vector3;\n\n    constructor(readonly view: ThreeView) {\n        super();\n        this.cameraController = view.cameraController;\n        this._axes = this._initAxes();\n        this._center = new Vector3(options.size * 0.5, options.size * 0.5, 0);\n        this._canvas = this._initCanvas();\n        this._context = this._canvas.getContext(\"2d\")!;\n        this._initStyle();\n    }\n\n    private _initStyle() {\n        this.style.zIndex = \"999\";\n        this.style.position = \"absolute\";\n        this.style.top = \"20px\";\n        this.style.right = \"20px\";\n        this.style.borderRadius = \"100%\";\n        this.style.cursor = \"pointer\";\n        this.style.userSelect = \"none\";\n        this.style.webkitUserSelect = \"none\";\n    }\n\n    private _initCanvas() {\n        let canvas = document.createElement(\"canvas\");\n        canvas.width = options.size;\n        canvas.height = options.size;\n        canvas.style.width = `${options.size * 0.5}px`;\n        canvas.style.height = `${options.size * 0.5}px`;\n        this.append(canvas);\n        return canvas;\n    }\n\n    private _initAxes() {\n        return [\n            {\n                axis: \"x\",\n                direction: new Vector3(1, 0, 0),\n                position: new Vector3(),\n                size: options.bubbleSizePrimary,\n                color: options.colors.x,\n                lineWidth: options.lineWidth,\n                label: \"X\",\n            },\n            {\n                axis: \"y\",\n                direction: new Vector3(0, 1, 0),\n                position: new Vector3(),\n                size: options.bubbleSizePrimary,\n                color: options.colors.y,\n                lineWidth: options.lineWidth,\n                label: \"Y\",\n            },\n            {\n                axis: \"z\",\n                direction: new Vector3(0, 0, 1),\n                position: new Vector3(),\n                size: options.bubbleSizePrimary,\n                color: options.colors.z,\n                lineWidth: options.lineWidth,\n                label: \"Z\",\n            },\n            {\n                axis: \"-x\",\n                direction: new Vector3(-1, 0, 0),\n                position: new Vector3(),\n                size: options.bubbleSizeSeconday,\n                color: options.colors.x,\n            },\n            {\n                axis: \"-y\",\n                direction: new Vector3(0, -1, 0),\n                position: new Vector3(),\n                size: options.bubbleSizeSeconday,\n                color: options.colors.y,\n            },\n            {\n                axis: \"-z\",\n                direction: new Vector3(0, 0, -1),\n                position: new Vector3(),\n                size: options.bubbleSizeSeconday,\n                color: options.colors.z,\n            },\n        ];\n    }\n\n    connectedCallback() {\n        this._canvas.addEventListener(\"pointermove\", this._onPointerMove);\n        this._canvas.addEventListener(\"pointerenter\", this._onPointerEnter);\n        this._canvas.addEventListener(\"pointerout\", this._onPointerOut);\n        this._canvas.addEventListener(\"click\", this._onClick);\n        this._canvas.addEventListener(\"pointerdown\", this._onPointerDown);\n        this._canvas.addEventListener(\"pointerup\", this._onPointerUp);\n    }\n\n    disconnectedCallback() {\n        this._canvas.removeEventListener(\"pointermove\", this._onPointerMove);\n        this._canvas.removeEventListener(\"pointerenter\", this._onPointerEnter);\n        this._canvas.removeEventListener(\"pointerout\", this._onPointerOut);\n        this._canvas.removeEventListener(\"click\", this._onClick);\n        this._canvas.removeEventListener(\"pointerdown\", this._onPointerDown);\n        this._canvas.removeEventListener(\"pointerup\", this._onPointerUp);\n    }\n\n    private readonly _onPointerMove = (e: PointerEvent) => {\n        e.stopPropagation();\n        if (e.buttons === MOUSE_LEFT && !(e.movementX === 0 && e.movementY === 0)) {\n            this.cameraController.rotate(e.movementX * 4, e.movementY * 4);\n            this._canClick = false;\n        }\n        const rect = this._canvas.getBoundingClientRect();\n        this._mouse = new Vector3(e.clientX - rect.left, e.clientY - rect.top, 0).multiplyScalar(2);\n        this.view.update();\n    };\n\n    private readonly _onPointerDown = (e: PointerEvent) => {\n        e.stopPropagation();\n        this._canvas.setPointerCapture(e.pointerId);\n    };\n\n    private readonly _onPointerUp = (e: PointerEvent) => {\n        e.stopPropagation();\n        this._canvas.releasePointerCapture(e.pointerId);\n    };\n\n    private readonly _onPointerOut = (e: PointerEvent) => {\n        e.stopPropagation();\n        this._mouse = undefined;\n        this.style.backgroundColor = \"transparent\";\n    };\n\n    private readonly _onPointerEnter = (e: PointerEvent) => {\n        e.stopPropagation();\n        this.style.backgroundColor = \"rgba(66, 66, 66, .9)\";\n    };\n\n    private readonly _onClick = (e: MouseEvent) => {\n        e.stopPropagation();\n        if (!this._canClick) {\n            this._canClick = true;\n            return;\n        }\n        if (this._selectedAxis) {\n            const distance = this.cameraController.camera.position.distanceTo(this.cameraController.target);\n            const position = this._selectedAxis.direction\n                .clone()\n                .multiplyScalar(distance)\n                .add(this.cameraController.target);\n            this.cameraController.camera.position.copy(position);\n            let up = new XYZ(0, 0, 1);\n            if (this._selectedAxis.axis === \"z\") up = new XYZ(0, 1, 0);\n            else if (this._selectedAxis.axis === \"-z\") up = new XYZ(0, -1, 0);\n            this.cameraController.lookAt(\n                this.cameraController.camera.position,\n                this.cameraController.target,\n                up,\n            );\n            this.view.update();\n        }\n    };\n\n    clear() {\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    update() {\n        this.clear();\n        const invRotMat = new Matrix4()\n            .makeRotationFromEuler(this.cameraController.camera.rotation)\n            .invert();\n        this._axes.forEach(\n            (axis) =>\n                (axis.position = this.getBubblePosition(axis.direction.clone().applyMatrix4(invRotMat))),\n        );\n        this._axes.sort((a, b) => a.position.z - b.position.z);\n        this.setSelectedAxis(this._axes);\n        this.drawAxes(this._axes);\n    }\n\n    private setSelectedAxis(axes: Axis[]) {\n        this._selectedAxis = undefined;\n        if (this._mouse && this._canClick) {\n            let closestDist = Infinity;\n            for (let axis of axes) {\n                const distance = this._mouse.distanceTo(axis.position);\n                if (distance < closestDist && distance < axis.size) {\n                    closestDist = distance;\n                    this._selectedAxis = axis;\n                }\n            }\n        }\n    }\n\n    drawAxes(axes: Axis[]) {\n        for (let axis of axes) {\n            const color = this.getAxisColor(axis);\n            this.drawCircle(axis.position, axis.size, color);\n            this.drawLine(this._center, axis.position, color, axis.lineWidth);\n            this.drawLabel(axis);\n        }\n    }\n\n    private getAxisColor(axis: Axis) {\n        let color;\n        if (this._selectedAxis === axis) {\n            color = \"#FFFFFF\";\n        } else if (axis.position.z >= -0.01) {\n            color = axis.color[0];\n        } else {\n            color = axis.color[1];\n        }\n        return color;\n    }\n\n    private drawCircle(p: Vector3, radius = 10, color = \"#FF0000\") {\n        this._context.beginPath();\n        this._context.arc(p.x, p.y, radius, 0, 2 * Math.PI, false);\n        this._context.fillStyle = color;\n        this._context.fill();\n        this._context.closePath();\n    }\n\n    private drawLine(p1: Vector3, p2: Vector3, color: string, width?: number) {\n        if (width) {\n            this._context.beginPath();\n            this._context.moveTo(p1.x, p1.y);\n            this._context.lineTo(p2.x, p2.y);\n            this._context.lineWidth = width;\n            this._context.strokeStyle = color;\n            this._context.stroke();\n            this._context.closePath();\n        }\n    }\n\n    private drawLabel(axis: Axis) {\n        if (axis.label) {\n            this._context.font = [options.fontSize, options.fontFamily].join(\" \");\n            this._context.fillStyle = options.fontColor;\n            this._context.textBaseline = \"middle\";\n            this._context.textAlign = \"center\";\n            this._context.fillText(axis.label, axis.position.x, axis.position.y + options.fontYAdjust);\n        }\n    }\n\n    private getBubblePosition(vector: Vector3) {\n        return new Vector3(\n            vector.x * (this._center.x - options.bubbleSizePrimary / 2 - options.padding) + this._center.x,\n            this._center.y - vector.y * (this._center.y - options.bubbleSizePrimary / 2 - options.padding),\n            vector.z,\n        );\n    }\n}\n\ncustomElements.define(\"view-gizmo\", ViewGizmo);\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { div, span, svg } from \"chili-controls\";\nimport {\n    HtmlTextOptions,\n    IDisposable,\n    IDocument,\n    INodeFilter,\n    IShape,\n    IShapeFilter,\n    ISubShape,\n    IView,\n    IVisualObject,\n    Matrix4,\n    MultiShapeNode,\n    Observable,\n    Plane,\n    PubSub,\n    Ray,\n    ShapeMeshRange,\n    ShapeNode,\n    ShapeType,\n    ViewMode,\n    VisualNode,\n    VisualShapeData,\n    XY,\n    XYZ,\n    XYZLike,\n    debounce,\n} from \"chili-core\";\nimport {\n    DirectionalLight,\n    Intersection,\n    Mesh,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Raycaster,\n    Scene,\n    Vector2,\n    Vector3,\n    WebGLRenderer,\n} from \"three\";\nimport { SelectionBox } from \"three/examples/jsm/interactive/SelectionBox\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { CSS2DObject, CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\nimport { CameraController } from \"./cameraController\";\nimport { Constants } from \"./constants\";\nimport { ThreeGeometry } from \"./threeGeometry\";\nimport { ThreeHelper } from \"./threeHelper\";\nimport { ThreeHighlighter } from \"./threeHighlighter\";\nimport style from \"./threeView.module.css\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\nimport { ThreeComponentObject, ThreeMeshObject, ThreeVisualObject } from \"./threeVisualObject\";\nimport { ViewGizmo } from \"./viewGizmo\";\n\nexport class ThreeView extends Observable implements IView {\n    private _dom?: HTMLElement;\n    private readonly _resizeObserver: ResizeObserver;\n\n    private readonly _scene: Scene;\n    private readonly _renderer: WebGLRenderer;\n    private readonly _cssRenderer: CSS2DRenderer;\n    private readonly _workplane: Plane;\n    private _needsUpdate: boolean = false;\n    private readonly _gizmo: ViewGizmo;\n    readonly cameraController: CameraController;\n    readonly dynamicLight = new DirectionalLight(0xffffff, 2);\n\n    get name(): string {\n        return this.getPrivateValue(\"name\");\n    }\n    set name(value: string) {\n        this.setProperty(\"name\", value);\n    }\n\n    get dom() {\n        return this._dom;\n    }\n\n    private _isClosed: boolean = false;\n    get isClosed(): boolean {\n        return this._isClosed;\n    }\n\n    get camera(): PerspectiveCamera | OrthographicCamera {\n        return this.cameraController.camera;\n    }\n\n    get mode(): ViewMode {\n        return this.getPrivateValue(\"mode\", ViewMode.solidAndWireframe);\n    }\n    set mode(value: ViewMode) {\n        this.setProperty(\"mode\", value, () => {\n            this.cameraController.setCameraLayer(this.camera, this.mode);\n        });\n    }\n\n    constructor(\n        readonly document: IDocument,\n        name: string,\n        workplane: Plane,\n        readonly highlighter: ThreeHighlighter,\n        readonly content: ThreeVisualContext,\n    ) {\n        super();\n        this.setPrivateValue(\"name\", name);\n        this._scene = content.scene;\n        this._workplane = workplane;\n        let resizerObserverCallback = debounce(this._resizerObserverCallback, 100);\n        this._resizeObserver = new ResizeObserver(resizerObserverCallback);\n        this.cameraController = new CameraController(this);\n        this._renderer = this.initRenderer();\n        this._cssRenderer = this.initCssRenderer();\n        this._scene.add(this.dynamicLight);\n        this._gizmo = new ViewGizmo(this);\n        this.setPrivateValue(\"mode\", ViewMode.solidAndWireframe);\n        this.camera.layers.enableAll();\n        this.document.application.views.push(this);\n        this.animate();\n    }\n\n    override disposeInternal(): void {\n        super.disposeInternal();\n        this._resizeObserver.disconnect();\n    }\n\n    close(): void {\n        if (this._isClosed) return;\n        this._isClosed = true;\n        this.document.application.views.remove(this);\n        let otherView = this.document.application.views.find((x) => x.document === this.document);\n        if (!otherView) {\n            this.document.close();\n        } else if (this.document.application.activeView === this) {\n            this.document.application.activeView = otherView;\n        }\n        this.dispose();\n        PubSub.default.pub(\"viewClosed\", this);\n    }\n\n    private readonly _resizerObserverCallback = (entries: ResizeObserverEntry[]) => {\n        for (const entry of entries) {\n            if (entry.target === this._dom) {\n                this.resize(entry.contentRect.width, entry.contentRect.height);\n                return;\n            }\n        }\n    };\n\n    get renderer(): WebGLRenderer {\n        return this._renderer;\n    }\n\n    protected initRenderer() {\n        let renderer = new WebGLRenderer({\n            antialias: false,\n            alpha: true,\n        });\n        renderer.setPixelRatio(window.devicePixelRatio);\n\n        return renderer;\n    }\n\n    private initCssRenderer() {\n        let renderer = new CSS2DRenderer();\n        return renderer;\n    }\n\n    setDom(element: HTMLElement) {\n        if (this._dom) {\n            this._resizeObserver.unobserve(this._dom);\n        }\n        this._dom = element;\n        this._gizmo?.remove();\n        element.appendChild(this._gizmo);\n\n        this._renderer.domElement.remove();\n        this._renderer.domElement.style.userSelect = \"none\";\n        this._renderer.domElement.style.webkitUserSelect = \"none\";\n        element.appendChild(this._renderer.domElement);\n\n        this._cssRenderer.domElement.remove();\n        this._cssRenderer.domElement.style.position = \"absolute\";\n        this._cssRenderer.domElement.style.top = \"0px\";\n        this._cssRenderer.domElement.style.userSelect = \"none\";\n        this._cssRenderer.domElement.style.webkitUserSelect = \"none\";\n        element.appendChild(this._cssRenderer.domElement);\n\n        this.resize(element.clientWidth, element.clientHeight);\n        this._resizeObserver.observe(element);\n        this.cameraController.updateCameraPosionTarget();\n    }\n\n    htmlText(text: string, point: XYZLike, options?: HtmlTextOptions): IDisposable {\n        const dispose = () => {\n            options?.onDispose?.();\n            this.content.cssObjects.remove(cssObject);\n            cssObject.element.remove();\n        };\n        let cssObject = new CSS2DObject(this.htmlElement(text, dispose, options));\n        cssObject.position.set(point.x, point.y, point.z);\n        if (options?.center) cssObject.center.set(options.center.x, options.center.y);\n        this.content.cssObjects.add(cssObject);\n        return { dispose };\n    }\n\n    private htmlElement(text: string, dispose: () => void, options?: HtmlTextOptions): HTMLElement {\n        return div(\n            {\n                className: options?.hideDelete ? `${style.htmlText} ${style.noEvent}` : style.htmlText,\n            },\n            span({ textContent: text }),\n            options?.hideDelete === true\n                ? \"\"\n                : svg({\n                    className: style.delete,\n                    icon: \"icon-times\",\n                    onclick: (e) => {\n                        e.stopPropagation();\n                        dispose();\n                    },\n                }),\n        );\n    }\n\n    toImage(): string {\n        this._renderer.render(this._scene, this.camera);\n        return this.renderer.domElement.toDataURL();\n    }\n\n    get workplane(): Plane {\n        return this._workplane;\n    }\n\n    set workplane(value: Plane) {\n        this.setProperty(\"workplane\", value);\n    }\n\n    update() {\n        this._needsUpdate = true;\n    }\n\n    private animate() {\n        if (this._isClosed) {\n            return;\n        }\n        requestAnimationFrame(() => {\n            this.animate();\n        });\n        if (!this._needsUpdate) return;\n\n        let dir = this.camera.position.clone().sub(this.cameraController.target);\n        this.dynamicLight.position.copy(dir);\n        this._renderer.render(this._scene, this.camera);\n        this._cssRenderer.render(this._scene, this.camera);\n        this._gizmo?.update();\n\n        this._needsUpdate = false;\n    }\n\n    resize(width: number, height: number) {\n        if (height < 0.00001) {\n            return;\n        }\n        if (this.camera instanceof PerspectiveCamera) {\n            this.camera.aspect = width / height;\n            this.camera.updateProjectionMatrix();\n        } else if (this.camera instanceof OrthographicCamera) {\n            this.camera.updateProjectionMatrix();\n        }\n        this._renderer.setSize(width, height);\n        this._cssRenderer.setSize(width, height);\n        this.cameraController.setSize(width, height);\n        this.update();\n    }\n\n    get width() {\n        return this._dom?.clientWidth ?? 1;\n    }\n\n    get height() {\n        return this._dom?.clientHeight ?? 1;\n    }\n\n    screenToCameraRect(mx: number, my: number) {\n        return new Vector2((mx / this.width) * 2 - 1, -(my / this.height) * 2 + 1);\n    }\n\n    rayAt(mx: number, my: number): Ray {\n        const { x, y } = this.screenToCameraRect(mx, my);\n\n        const origin = new Vector3();\n        const direction = new Vector3(x, y, 0.5);\n        if (this.camera instanceof PerspectiveCamera) {\n            origin.setFromMatrixPosition(this.camera.matrixWorld);\n            direction.unproject(this.camera).sub(origin).normalize();\n        } else if (this.camera instanceof OrthographicCamera) {\n            const z = (this.camera.near + this.camera.far) / (this.camera.near - this.camera.far);\n            origin.set(x, y, z).unproject(this.camera);\n            direction.set(0, 0, -1).transformDirection(this.camera.matrixWorld);\n        } else {\n            console.error(\"Unsupported camera type: \" + this.camera);\n        }\n\n        return new Ray(ThreeHelper.toXYZ(origin), ThreeHelper.toXYZ(direction));\n    }\n\n    screenToWorld(mx: number, my: number): XYZ {\n        let vec = this.mouseToWorld(mx, my);\n        return ThreeHelper.toXYZ(vec);\n    }\n\n    worldToScreen(point: XYZ): XY {\n        let cx = this.width / 2;\n        let cy = this.height / 2;\n        let vec = new Vector3(point.x, point.y, point.z).project(this.camera);\n        return new XY(Math.round(cx * vec.x + cx), Math.round(-cy * vec.y + cy));\n    }\n\n    direction(): XYZ {\n        const vec = new Vector3();\n        this.camera.getWorldDirection(vec);\n        return ThreeHelper.toXYZ(vec);\n    }\n\n    up(): XYZ {\n        return ThreeHelper.toXYZ(this.camera.up);\n    }\n\n    private mouseToWorld(mx: number, my: number, z: number = 0.5) {\n        let { x, y } = this.screenToCameraRect(mx, my);\n        return new Vector3(x, y, z).unproject(this.camera);\n    }\n\n    detectVisual(x: number, y: number, nodeFilter?: INodeFilter): IVisualObject[] {\n        let visual: IVisualObject[] = [];\n        let detecteds = this.findIntersectedNodes(x, y);\n        for (const detected of detecteds) {\n            let threeObject = detected.object.parent as ThreeVisualObject;\n            if (!threeObject) continue;\n\n            let node = this.getNodeFromObject(threeObject);\n            if (node === undefined) continue;\n            if (nodeFilter !== undefined && !nodeFilter.allow(node)) {\n                continue;\n            }\n            visual.push(threeObject);\n        }\n        return visual;\n    }\n\n    detectVisualRect(\n        mx1: number,\n        my1: number,\n        mx2: number,\n        my2: number,\n        nodeFilter?: INodeFilter,\n    ): IVisualObject[] {\n        const selectionBox = this.initSelectionBox(mx1, my1, mx2, my2);\n        let visual = new Set<IVisualObject>();\n        for (const obj of selectionBox.select()) {\n            let threeObject = obj.parent as ThreeVisualObject;\n            if (!threeObject?.visible) continue;\n\n            let node = this.getNodeFromObject(threeObject);\n            if (node === undefined) continue;\n            if (nodeFilter !== undefined && !nodeFilter.allow(node)) {\n                continue;\n            }\n            visual.add(threeObject);\n        }\n        return Array.from(visual);\n    }\n\n    private getNodeFromObject(threeObject: Object3D) {\n        let node: VisualNode | undefined;\n        if (threeObject instanceof ThreeMeshObject) {\n            node = threeObject.meshNode;\n        } else if (threeObject instanceof ThreeGeometry) {\n            node = threeObject.geometryNode;\n        } else if (threeObject instanceof ThreeComponentObject) {\n            node = threeObject.componentNode;\n        }\n\n        return node;\n    }\n\n    private initSelectionBox(mx1: number, my1: number, mx2: number, my2: number) {\n        const selectionBox = new SelectionBox(this.camera, this._scene);\n        const start = this.screenToCameraRect(mx1, my1);\n        const end = this.screenToCameraRect(mx2, my2);\n        selectionBox.startPoint.set(start.x, start.y, 0.5);\n        selectionBox.endPoint.set(end.x, end.y, 0.5);\n        return selectionBox;\n    }\n\n    detectShapesRect(\n        shapeType: ShapeType,\n        mx1: number,\n        my1: number,\n        mx2: number,\n        my2: number,\n        shapeFilter?: IShapeFilter,\n        nodeFilter?: INodeFilter,\n    ) {\n        const selectionBox = this.initSelectionBox(mx1, my1, mx2, my2);\n        let detecteds: VisualShapeData[] = [];\n        let containsCache = new Set<IShape>();\n        for (const obj of selectionBox.select()) {\n            this.addDetectedShape(detecteds, containsCache, shapeType, obj, shapeFilter, nodeFilter);\n        }\n        return detecteds;\n    }\n\n    private addDetectedShape(\n        detecteds: VisualShapeData[],\n        cache: Set<IShape>,\n        shapeType: ShapeType,\n        obj: Mesh | LineSegments2,\n        shapeFilter?: IShapeFilter,\n        nodeFilter?: INodeFilter,\n    ) {\n        const node = this.getParentNode(obj);\n        const shape = node?.shape.unchecked();\n        if (shape === undefined || cache.has(shape)) return;\n\n        const addShape = (indexes: number[]) => {\n            detecteds.push({\n                shape,\n                transform: ThreeHelper.toMatrix(obj.parent!.matrixWorld),\n                owner: obj.parent as any,\n                indexes,\n            });\n            cache.add(shape);\n        };\n\n        if (shapeType === ShapeType.Shape) {\n            addShape([]);\n            return;\n        }\n        if ((shape.shapeType & shapeType) === 0) return;\n        if ((shapeFilter && !shapeFilter.allow(shape)) || (nodeFilter && !nodeFilter.allow(node!))) return;\n\n        let groups = obj instanceof LineSegments2 ? shape.mesh.edges?.range : shape.mesh.faces?.range;\n        addShape([...Array(groups?.length).keys()]);\n    }\n\n    private getParentNode(obj: Object3D) {\n        if (!obj.parent?.visible || !(obj.parent instanceof ThreeGeometry)) return undefined;\n\n        return obj.parent.geometryNode as ShapeNode;\n    }\n\n    detectShapes(\n        shapeType: ShapeType,\n        mx: number,\n        my: number,\n        shapeFilter?: IShapeFilter,\n        nodeFilter?: INodeFilter,\n    ): VisualShapeData[] {\n        let intersections = this.findIntersectedShapes(shapeType, mx, my);\n        return ShapeType.isWhole(shapeType)\n            ? this.detectThreeShapes(intersections, shapeFilter, nodeFilter)\n            : this.detectSubShapes(shapeType, intersections, shapeFilter, nodeFilter);\n    }\n\n    private detectThreeShapes(intersections: Intersection[], shapeFilter?: IShapeFilter, nodeFilter?: INodeFilter): VisualShapeData[] {\n        for (const element of intersections) {\n            const parent = element.object.parent;\n            if (!(parent instanceof ThreeGeometry)) continue;\n\n            let shape: IShape | undefined;\n            if (parent.geometryNode instanceof ShapeNode) {\n                shape = parent.geometryNode.shape.unchecked();\n            } else if (parent.geometryNode instanceof MultiShapeNode) {\n                shape = this.findShapeAndIndex(parent, element).shape;\n            }\n\n            if (!shape \n                || (shapeFilter && !shapeFilter.allow(shape)) \n                || (nodeFilter && !nodeFilter.allow(parent.geometryNode))\n            ) {\n                continue;\n            }\n\n            return [\n                {\n                    owner: parent,\n                    shape,\n                    transform: parent.worldTransform(),\n                    point: ThreeHelper.toXYZ(element.pointOnLine ?? element.point),\n                    indexes: [],\n                },\n            ];\n        }\n        return [];\n    }\n\n    private detectSubShapes(\n        shapeType: ShapeType,\n        intersections: Intersection<Object3D>[],\n        shapeFilter?: IShapeFilter,\n        nodeFilter?: INodeFilter,\n    ) {\n        let result: VisualShapeData[] = [];\n        for (const intersected of intersections) {\n            const visualShape = intersected.object.parent;\n            if (visualShape instanceof ThreeVisualObject) {\n                let { shape, indexes, transform } = this.getSubShapeFromInsection(\n                    shapeType,\n                    visualShape,\n                    intersected,\n                );\n                if (\n                    !shape \n                    || (shapeFilter && !shapeFilter.allow(shape)) \n                    || (nodeFilter && !nodeFilter.allow(visualShape.node))\n                ) {\n                    continue;\n                }\n                const nodeWorldTransform = visualShape.worldTransform();\n                result.push({\n                    owner: visualShape,\n                    shape,\n                    transform: transform ? nodeWorldTransform.multiply(transform) : nodeWorldTransform,\n                    point: ThreeHelper.toXYZ(intersected.pointOnLine ?? intersected.point),\n                    indexes,\n                });\n            }\n        }\n        return result;\n    }\n\n    private getSubShapeFromInsection(\n        shapeType: ShapeType,\n        parent: ThreeVisualObject,\n        intersection: Intersection,\n    ): {\n        shape: IShape | undefined;\n        transform?: Matrix4;\n        indexes: number[];\n    } {\n        let { shape, subShape, index, groups, transform } = this.findShapeAndIndex(parent, intersection);\n        if (!subShape || !shape) return { shape: undefined, indexes: [] };\n\n        if (ShapeType.hasSolid(shapeType) && subShape.shapeType === ShapeType.Face) {\n            let solid = this.getAncestorAndIndex(ShapeType.Solid, subShape, shape, groups);\n            if (solid.shape) return solid;\n        }\n        if (ShapeType.hasShell(shapeType) && subShape.shapeType === ShapeType.Face) {\n            let shell = this.getAncestorAndIndex(ShapeType.Shell, subShape, shape, groups);\n            if (shell.shape) return shell;\n        }\n        if (ShapeType.hasWire(shapeType) && subShape.shapeType === ShapeType.Edge) {\n            let wire = this.getAncestorAndIndex(ShapeType.Wire, subShape, shape, groups);\n            if (wire.shape) return wire;\n        }\n        if (!ShapeType.hasFace(shapeType) && subShape.shapeType === ShapeType.Face) {\n            return { shape: undefined, indexes: [index] };\n        }\n        if (!ShapeType.hasEdge(shapeType) && subShape.shapeType === ShapeType.Edge) {\n            return { shape: undefined, indexes: [index] };\n        }\n\n        return { shape: subShape, indexes: [index], transform };\n    }\n\n    private getAncestorAndIndex(\n        type: ShapeType,\n        subShape: ISubShape,\n        shape: IShape,\n        groups: ShapeMeshRange[],\n    ) {\n        let ancestor = subShape.findAncestor(type, shape).at(0);\n        if (!ancestor) return { shape: undefined, indexes: [] };\n\n        let indexes: number[] = [];\n        for (const sub of ancestor.findSubShapes(subShape.shapeType)) {\n            this.findIndex(groups, sub, indexes);\n        }\n        return { shape: ancestor, indexes, subShape, transform: groups.at(0)?.transform };\n    }\n\n    private findIndex(groups: ShapeMeshRange[], shape: IShape, indexes: number[]) {\n        for (let i = 0; i < groups.length; i++) {\n            if (shape.isEqual(groups[i].shape)) {\n                indexes.push(i);\n            }\n        }\n    }\n\n    private findShapeAndIndex(parent: ThreeVisualObject, element: Intersection) {\n        let type: \"edge\" | \"face\" = \"edge\";\n        let subVisualIndex = element.faceIndex! * 2;\n        if (!element.pointOnLine) {\n            type = \"face\";\n            subVisualIndex = element.faceIndex! * 3;\n        }\n\n        return parent.getSubShapeAndIndex(type, subVisualIndex);\n    }\n\n    private findIntersectedNodes(mx: number, my: number) {\n        let visuals: Object3D[] = [];\n        this.document.visual.context.visuals().forEach((x) => {\n            if (!x.visible) return;\n\n            if (x instanceof ThreeVisualObject) {\n                visuals.push(...x.wholeVisual());\n            }\n        });\n\n        return this.initRaycaster(mx, my).intersectObjects(visuals, false);\n    }\n\n    private findIntersectedShapes(shapeType: ShapeType, mx: number, my: number) {\n        let raycaster = this.initRaycaster(mx, my);\n        let shapes = this.initIntersectableShapes(shapeType);\n        return raycaster.intersectObjects(shapes, false);\n    }\n\n    private initIntersectableShapes(shapeType: ShapeType) {\n        let shapes = new Array<Object3D>();\n        this.document.visual.context.visuals().forEach((x) => {\n            if (!x.visible) return;\n            if (x instanceof ThreeVisualObject) shapes.push(...x.subShapeVisual(shapeType));\n            // TODO: vertex\n        });\n        return shapes;\n    }\n\n    private initRaycaster(mx: number, my: number) {\n        let threshold = Constants.RaycasterThreshold;\n        let { x, y } = this.screenToCameraRect(mx, my);\n        let mousePos = new Vector2(x, y);\n\n        let raycaster = new Raycaster();\n        if (this.mode === ViewMode.wireframe) {\n            raycaster.layers.disableAll();\n            raycaster.layers.enable(Constants.Layers.Wireframe);\n        } else if (this.mode === ViewMode.solid) {\n            raycaster.layers.disableAll();\n            raycaster.layers.enable(Constants.Layers.Solid);\n        } else {\n            raycaster.layers.enableAll();\n        }\n        raycaster.setFromCamera(mousePos, this.camera);\n        raycaster.params = {\n            ...raycaster.params,\n            Line2: { threshold },\n            Line: { threshold },\n            Points: { threshold },\n        };\n        return raycaster;\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport {\n    BoundingBox,\n    CollectionAction,\n    CollectionChangedArgs,\n    ComponentNode,\n    DeepObserver,\n    EdgeMeshData,\n    GeometryNode,\n    GroupNode,\n    IDisposable,\n    INode,\n    IShapeFilter,\n    IVisual,\n    IVisualContext,\n    IVisualObject,\n    Material,\n    Matrix4,\n    MeshLike,\n    MeshNode,\n    NodeAction,\n    NodeRecord,\n    ShapeMeshData,\n    ShapeNode,\n    ShapeType,\n    Texture,\n    XY,\n    XYZ,\n} from \"chili-core\";\nimport {\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    Group,\n    InstancedMesh,\n    LineBasicMaterial,\n    LineSegments,\n    Mesh,\n    Object3D,\n    Points,\n    Scene,\n    Material as ThreeMaterial,\n    Vector3,\n} from \"three\";\nimport { ThreeGeometry } from \"./threeGeometry\";\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\nimport { ThreeHelper } from \"./threeHelper\";\nimport { GroupVisualObject, ThreeComponentObject, ThreeMeshObject } from \"./threeVisualObject\";\n\nexport class ThreeVisualContext implements IVisualContext {\n    private readonly _visualNodeMap = new Map<IVisualObject, INode>();\n    private readonly _NodeVisualMap = new Map<INode, IVisualObject & Object3D>();\n    readonly materialMap = new Map<string, ThreeMaterial>();\n\n    readonly visualShapes: Group;\n    readonly tempShapes: Group;\n    readonly cssObjects: Group;\n\n    constructor(\n        readonly visual: IVisual,\n        readonly scene: Scene,\n    ) {\n        this.visualShapes = new Group();\n        this.tempShapes = new Group();\n        this.cssObjects = new Group();\n        scene.add(this.visualShapes, this.tempShapes, this.cssObjects);\n        visual.document.addNodeObserver(this);\n        visual.document.materials.onCollectionChanged(this.onMaterialCollectionChanged);\n    }\n\n    private readonly onMaterialCollectionChanged = (args: CollectionChangedArgs) => {\n        if (args.action === CollectionAction.add) {\n            args.items.forEach(this.createThreeMaterial.bind(this));\n        } else if (args.action === CollectionAction.remove) {\n            args.items.forEach(this.removeThreeMaterial.bind(this));\n        }\n    };\n\n    private createThreeMaterial(material: Material) {\n        const result = ThreeHelper.parseToThreeMaterial(material);\n        DeepObserver.addDeepPropertyChangedHandler(material, this.onMaterialPropertyChanged);\n        this.materialMap.set(material.id, result);\n    }\n\n    private removeThreeMaterial(item: Material) {\n        const material = this.materialMap.get(item.id);\n        this.materialMap.delete(item.id);\n        DeepObserver.removeDeepPropertyChangedHandler(item, this.onMaterialPropertyChanged);\n        material?.dispose();\n    }\n\n    private readonly onMaterialPropertyChanged = (path: string, source: any) => {\n        const material: any = this.materialMap.get(source?.id);\n        if (!material) return;\n\n        const { isOk, value } = DeepObserver.getPathValue(source, path);\n        if (!isOk) return;\n\n        if (path === \"color\") {\n            material.color.set(value);\n        } else if (!path.includes(\".\")) {\n            material[path] = value instanceof Texture ? ThreeHelper.loadTexture(value) : value;\n        } else {\n            this.setTextureValue(source, material, path, value);\n        }\n    };\n\n    private setTextureValue(material: any, threeMaterial: any, path: string, value: any) {\n        const paths = path.split(\".\");\n        if (path.endsWith(\".image\") && material[paths[0]] instanceof Texture && paths[0] in threeMaterial) {\n            threeMaterial[paths[0]] = ThreeHelper.loadTexture(material[paths[0]]);\n            return;\n        }\n\n        let obj = threeMaterial;\n        for (let i = 0; i < paths.length - 1; i++) {\n            obj = obj[paths[i]];\n        }\n        if (obj === undefined) return;\n\n        if (value instanceof XY) {\n            obj[paths.at(-1)!].set(value.x, value.y);\n        } else {\n            obj[paths.at(-1)!] = value;\n        }\n    }\n\n    handleNodeChanged = (records: NodeRecord[]) => {\n        const adds: INode[] = [];\n        const rms: INode[] = [];\n        records.forEach((x) => {\n            if (\n                x.action === NodeAction.add ||\n                x.action === NodeAction.insertBefore ||\n                x.action === NodeAction.insertAfter\n            ) {\n                INode.nodeOrChildrenAppendToNodes(adds, x.node);\n            } else if (x.action === NodeAction.remove || x.action === NodeAction.transfer) {\n                INode.nodeOrChildrenAppendToNodes(rms, x.node);\n            } else if (x.action === NodeAction.move && x.newParent) {\n                this.moveNode(x.node, x.oldParent!);\n            }\n        });\n\n        this.addNode(adds);\n        this.removeNode(rms);\n    };\n\n    addVisualObject(object: IVisualObject): void {\n        if (object instanceof Object3D) {\n            this.visualShapes.add(object);\n        }\n    }\n\n    removeVisualObject(object: IVisualObject): void {\n        if (object instanceof Object3D) {\n            this.visualShapes.remove(object);\n        }\n    }\n\n    dispose() {\n        this.visualShapes.traverse((x) => {\n            if (IDisposable.isDisposable(x)) x.dispose();\n        });\n        this.visual.document.materials.forEach((x) =>\n            x.removePropertyChanged(this.onMaterialPropertyChanged),\n        );\n        this.visual.document.materials.removeCollectionChanged(this.onMaterialCollectionChanged);\n        this.visual.document.removeNodeObserver(this);\n        this.materialMap.forEach((x) => x.dispose());\n        this.materialMap.clear();\n        this.visualShapes.clear();\n        this.tempShapes.clear();\n        this._visualNodeMap.clear();\n        this._NodeVisualMap.clear();\n        this.scene.remove(this.visualShapes, this.tempShapes);\n    }\n\n    getNode(visual: IVisualObject): INode | undefined {\n        return this._visualNodeMap.get(visual);\n    }\n\n    redrawNode(models: INode[]) {\n        this.removeNode(models);\n        this.addNode(models);\n    }\n\n    get shapeCount() {\n        return this.visualShapes.children.length;\n    }\n\n    getVisual(nodel: INode): IVisualObject | undefined {\n        return this._NodeVisualMap.get(nodel);\n    }\n\n    visuals(): IVisualObject[] {\n        let shapes = new Array<IVisualObject>();\n        this.visualShapes.children.forEach((x) => this._getVisualObject(shapes, x));\n        return shapes;\n    }\n\n    boundingBoxIntersectFilter(\n        boundingBox: {\n            min: XYZ;\n            max: XYZ;\n        },\n        filter?: IShapeFilter,\n    ): IVisualObject[] {\n        let box = new Box3().setFromPoints([\n            ThreeHelper.fromXYZ(boundingBox.min),\n            ThreeHelper.fromXYZ(boundingBox.max),\n        ]);\n        return this.visuals().filter((x) => {\n            const node = (x as ThreeGeometry)?.geometryNode;\n            const shape = (node as ShapeNode)?.shape?.unchecked();\n            if (filter && shape && !filter.allow(shape)) {\n                return false;\n            }\n\n            let boundingBox = BoundingBox.transformed(x.boundingBox()!, node.worldTransform());\n            if (boundingBox === undefined) {\n                return false;\n            }\n\n            let testBox = new Box3(\n                new Vector3(boundingBox.min.x, boundingBox.min.y, boundingBox.min.z),\n                new Vector3(boundingBox.max.x, boundingBox.max.y, boundingBox.max.z),\n            );\n            return box.intersectsBox(testBox);\n        });\n    }\n\n    private _getVisualObject(visuals: Array<IVisualObject>, obj: Object3D) {\n        let group = obj as Group;\n        if (group.type === \"Group\") {\n            group.children.forEach((x) => this._getVisualObject(visuals, x));\n        } else if (\n            obj instanceof ThreeGeometry ||\n            obj instanceof ThreeMeshObject ||\n            obj instanceof ThreeComponentObject\n        ) {\n            visuals.push(obj);\n        }\n    }\n\n    displayMesh(datas: ShapeMeshData[], opacity?: number): number {\n        let group = new Group();\n        datas.forEach((data) => {\n            if (ShapeMeshData.isVertex(data)) {\n                group.add(ThreeGeometryFactory.createVertexGeometry(data));\n            } else if (ShapeMeshData.isEdge(data)) {\n                group.add(ThreeGeometryFactory.createEdgeGeometry(data));\n            } else if (ShapeMeshData.isFace(data)) {\n                group.add(ThreeGeometryFactory.createFaceGeometry(data, opacity));\n            }\n        });\n        this.tempShapes.add(group);\n        return group.id;\n    }\n\n    displayInstancedMesh(data: MeshLike, matrixs: Matrix4[], opacity?: number): number {\n        let geometry = ThreeGeometryFactory.createFaceBufferGeometry(data);\n        let material = ThreeGeometryFactory.createMeshMaterial(opacity);\n\n        ThreeGeometryFactory.setColor(geometry, data, material);\n        const instancedMesh = new InstancedMesh(geometry, material, matrixs.length);\n        matrixs.forEach((matrix, index) => {\n            instancedMesh.setMatrixAt(index, ThreeHelper.fromMatrix(matrix));\n        });\n\n        this.tempShapes.add(instancedMesh);\n        return instancedMesh.id;\n    }\n\n    displayLineSegments(data: EdgeMeshData): number {\n        const bufferGeometry = new BufferGeometry();\n        bufferGeometry.setAttribute(\"position\", new BufferAttribute(data.position, 3));\n        const material = new LineBasicMaterial();\n        const lineSegments = new LineSegments(bufferGeometry, material);\n        ThreeGeometryFactory.setColor(bufferGeometry, data, material);\n\n        this.tempShapes.add(lineSegments);\n        return lineSegments.id;\n    }\n\n    setPosition(id: number, position: Float32Array): void {\n        let shape = this.tempShapes.getObjectById(id);\n        if (shape === undefined) return;\n\n        if (\"geometry\" in shape && shape.geometry instanceof BufferGeometry) {\n            shape.geometry.setAttribute(\"position\", new BufferAttribute(position, 3));\n            shape.geometry.attributes[\"position\"].needsUpdate = true;\n        }\n    }\n\n    setInstanceMatrix(id: number, matrixs: Matrix4[]) {\n        let shape = this.tempShapes.getObjectById(id) as InstancedMesh;\n        if (shape === undefined) return;\n        matrixs.forEach((matrix, index) => {\n            shape.setMatrixAt(index, ThreeHelper.fromMatrix(matrix));\n        });\n        shape.instanceMatrix.needsUpdate = true;\n    }\n\n    removeMesh(id: number) {\n        let shape = this.tempShapes.getObjectById(id);\n        if (shape === undefined) return;\n        shape.children.forEach((x) => {\n            if (x instanceof Mesh || x instanceof LineSegments || x instanceof Points) {\n                x.geometry.dispose();\n                x.material.dispose();\n            }\n            if (IDisposable.isDisposable(x)) {\n                x.dispose();\n            }\n        });\n        shape.children.length = 0;\n        this.tempShapes.remove(shape);\n    }\n\n    setVisible(node: INode, visible: boolean): void {\n        let shape = this.getVisual(node);\n        if (shape === undefined || shape.visible === visible) return;\n        shape.visible = visible;\n    }\n\n    moveNode(node: INode, oldParent: INode): void {\n        if (oldParent === node.parent) return;\n\n        let parentNode = this._NodeVisualMap.get(oldParent) ?? this.visualShapes;\n        let newParentNode = (this._NodeVisualMap.get(node.parent!) as any) ?? this.visualShapes;\n        if (parentNode === newParentNode) {\n            return;\n        }\n\n        if (parentNode instanceof Group) {\n            let visual = this._NodeVisualMap.get(node);\n            if (visual instanceof Object3D) {\n                parentNode.remove(visual);\n                newParentNode.add(visual);\n            }\n        }\n    }\n\n    addNode(nodes: INode[]) {\n        nodes.forEach((node) => {\n            if (!this._NodeVisualMap.has(node)) {\n                this.displayNode(node);\n            }\n        });\n    }\n\n    private displayNode(node: INode) {\n        let visualObject: (IVisualObject & Object3D) | undefined;\n        if (node instanceof MeshNode) {\n            visualObject = new ThreeMeshObject(this, node);\n        } else if (node instanceof GeometryNode) {\n            visualObject = new ThreeGeometry(node, this);\n        } else if (node instanceof GroupNode) {\n            visualObject = new GroupVisualObject(node);\n        } else if (node instanceof ComponentNode) {\n            visualObject = new ThreeComponentObject(node, this);\n        }\n\n        if (visualObject) {\n            const parent = this.getParentVisual(node);\n            parent.add(visualObject);\n            this._visualNodeMap.set(visualObject, node);\n            this._NodeVisualMap.set(node, visualObject);\n        }\n    }\n\n    removeNode(models: INode[]) {\n        models.forEach((m) => {\n            let visual = this._NodeVisualMap.get(m);\n            this._NodeVisualMap.delete(m);\n            if (!visual) return;\n            this._visualNodeMap.delete(visual);\n            visual.parent?.remove(visual);\n            visual.dispose();\n        });\n    }\n\n    private getParentVisual(node: INode): Group {\n        let parent = this.visualShapes;\n        if (node.parent) {\n            let parentNode = this._NodeVisualMap.get(node.parent);\n            if (parentNode instanceof Group) {\n                parent = parentNode;\n            }\n        }\n        return parent;\n    }\n\n    findShapes(shapeType: ShapeType): Object3D[] {\n        if (shapeType === ShapeType.Shape) {\n            return [...this.visualShapes.children];\n        }\n        const shapes: Object3D[] = [];\n        this.visualShapes.traverse((child) => {\n            if (!(child instanceof ThreeGeometry)) return;\n\n            if (shapeType === ShapeType.Edge) {\n                let wireframe = child.edges();\n                if (wireframe) shapes.push(wireframe);\n            } else if (shapeType === ShapeType.Face) {\n                let faces = child.faces();\n                if (faces) shapes.push(faces);\n            }\n        });\n        return shapes;\n    }\n\n    getMaterial(id: string | string[]): ThreeMaterial | ThreeMaterial[] {\n        if (Array.isArray(id)) {\n            const materials = [];\n            for (const i of id) {\n                const material = this.materialMap.get(i);\n                if (!material) {\n                    throw new Error(`Material not found: ${i}`);\n                }\n                materials.push(material);\n            }\n            return materials.length === 1 ? materials[0] : materials;\n        }\n\n        const material = this.materialMap.get(id);\n        if (!material) {\n            throw new Error(`Material not found: ${id}`);\n        }\n        return material;\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { Config, IEventHandler, IView, Navigation3D } from \"chili-core\";\n\ninterface MouseDownData {\n    time: number;\n    key: number;\n}\n\nconst MOUSE_MIDDLE = 4;\n\nexport class ThreeViewHandler implements IEventHandler {\n    private _lastDown: MouseDownData | undefined;\n    private _clearDownId: number | undefined;\n    private _offsetPoint: { x: number; y: number } | undefined;\n    protected lastPointerEventMap: Map<number, PointerEvent> = new Map();\n    protected currentPointerEventMap: Map<number, PointerEvent> = new Map();\n\n    canRotate: boolean = true;\n\n    dispose() {\n        this.clearTimeout();\n        this.lastPointerEventMap.clear();\n        this.currentPointerEventMap.clear();\n    }\n\n    mouseWheel(view: IView, event: WheelEvent): void {\n        const currentNav3D = Config.instance.navigation3DIndex;\n\n        if (\n            currentNav3D === Navigation3D.Nav3DType.Solidworks ||\n            currentNav3D === Navigation3D.Nav3DType.Creo\n        ) {\n            view.cameraController.zoom(event.offsetX, event.offsetY, -event.deltaY);\n        } else {\n            view.cameraController.zoom(event.offsetX, event.offsetY, event.deltaY);\n        }\n\n        view.update();\n    }\n\n    pointerMove(view: IView, event: PointerEvent): void {\n        if (event.pointerType === \"mouse\") {\n            this.handleMouseMove(view, event);\n        } else {\n            this.handleTouchMove(view, event);\n        }\n\n        view.update();\n    }\n\n    private handleMouseMove(view: IView, event: PointerEvent) {\n        if (event.buttons !== MOUSE_MIDDLE) {\n            return;\n        }\n\n        let dx = 0;\n        let dy = 0;\n        if (this._offsetPoint) {\n            dx = event.offsetX - this._offsetPoint.x;\n            dy = event.offsetY - this._offsetPoint.y;\n            this._offsetPoint = { x: event.offsetX, y: event.offsetY };\n        }\n\n        let key = Navigation3D.getKey(event);\n        const navigatioMap = Navigation3D.navigationKeyMap();\n        if (navigatioMap.pan === key) {\n            view.cameraController.pan(dx, dy);\n        } else if (navigatioMap.rotate === key && this.canRotate) {\n            view.cameraController.rotate(dx, dy);\n        }\n\n        if (dx !== 0 && dy !== 0) this._lastDown = undefined;\n    }\n\n    private handleTouchMove(view: IView, event: PointerEvent) {\n        if (!this.currentPointerEventMap.has(event.pointerId)) {\n            this.currentPointerEventMap.set(event.pointerId, event);\n            return;\n        }\n\n        if (this.currentPointerEventMap.size === 3 && this.lastPointerEventMap.size === 3) {\n            const offset = this.getPrimaryTouchOffset();\n            if (offset) view.cameraController.rotate(offset.dx, offset.dy);\n        } else if (this.currentPointerEventMap.size === 2 && this.lastPointerEventMap.size === 2) {\n            const last = this.getCenterAndDistance(this.lastPointerEventMap);\n            const current = this.getCenterAndDistance(this.currentPointerEventMap);\n            const dtCenter = this.distance(current.center.x, current.center.y, last.center.x, last.center.y);\n            const dtDistance = current.distance - last.distance;\n            if (dtCenter > Math.abs(dtDistance) * 0.5) {\n                // 0.5 no meaning, just for scale\n                view.cameraController.pan(\n                    current.center.x - last.center.x,\n                    current.center.y - last.center.y,\n                );\n            } else {\n                view.cameraController.zoom(current.center.x, current.center.y, -dtDistance);\n            }\n        }\n\n        this.lastPointerEventMap.clear();\n        this.lastPointerEventMap = this.currentPointerEventMap;\n        this.currentPointerEventMap = new Map();\n    }\n\n    private getPrimaryTouchOffset() {\n        const findPrimary = (pointerEvents: Map<number, PointerEvent>) => {\n            let primary: PointerEvent | undefined;\n            for (const [, event] of pointerEvents) {\n                if (event.isPrimary) {\n                    primary = event;\n                    break;\n                }\n            }\n            return primary;\n        };\n        const last = findPrimary(this.lastPointerEventMap);\n        const current = findPrimary(this.currentPointerEventMap);\n        if (last && current) {\n            return {\n                dx: current.offsetX - last.offsetX,\n                dy: current.offsetY - last.offsetY,\n            };\n        }\n        return undefined;\n    }\n\n    private getCenterAndDistance(pointerEvents: Map<number, PointerEvent>) {\n        const values = pointerEvents.values();\n        const first = values.next().value!;\n        const second = values.next().value!;\n        const center = {\n            x: (first.offsetX + second.offsetX) / 2,\n            y: (first.offsetY + second.offsetY) / 2,\n        };\n        const distance = this.distance(first.offsetX, second.offsetX, first.offsetY, second.offsetY);\n        return { center, distance };\n    }\n\n    private distance(x1: number, y1: number, x2: number, y2: number) {\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    }\n\n    pointerDown(view: IView, event: PointerEvent): void {\n        this.clearTimeout();\n        if (event.pointerType === \"mouse\") {\n            this.handleMouseDown(event, view);\n        } else {\n            this.lastPointerEventMap.set(event.pointerId, event);\n        }\n    }\n\n    private handleMouseDown(event: PointerEvent, view: IView) {\n        if (this._lastDown && this._lastDown.time + 500 > Date.now() && event.buttons === MOUSE_MIDDLE) {\n            this._lastDown = undefined;\n            view.cameraController.fitContent();\n            view.update();\n        } else if (event.buttons === MOUSE_MIDDLE) {\n            view.cameraController.startRotate(event.offsetX, event.offsetY);\n            this._lastDown = {\n                time: Date.now(),\n                key: event.buttons,\n            };\n            this._offsetPoint = { x: event.offsetX, y: event.offsetY };\n        }\n    }\n\n    private clearTimeout() {\n        if (this._clearDownId) {\n            clearTimeout(this._clearDownId);\n            this._clearDownId = undefined;\n        }\n    }\n\n    pointerOut(view: IView, event: PointerEvent): void {\n        this._lastDown = undefined;\n        this.lastPointerEventMap.delete(event.pointerId);\n        this.currentPointerEventMap.delete(event.pointerId);\n    }\n\n    pointerUp(view: IView, event: PointerEvent): void {\n        if (event.buttons === MOUSE_MIDDLE && this._lastDown) {\n            this._clearDownId = window.setTimeout(() => {\n                this._lastDown = undefined;\n                this._clearDownId = undefined;\n            }, 500);\n        }\n        this._offsetPoint = undefined;\n        this.lastPointerEventMap.delete(event.pointerId);\n        this.currentPointerEventMap.delete(event.pointerId);\n    }\n\n    keyDown(view: IView, event: KeyboardEvent): void {}\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { IMeshExporter, Result, VisualNode } from \"chili-core\";\nimport { Group, Mesh, Object3D } from \"three\";\nimport { PLYExporter } from \"three/examples/jsm/exporters/PLYExporter\";\nimport { STLExporter } from \"three/examples/jsm/exporters/STLExporter\";\nimport { OBJExporter } from \"three/examples/jsm/exporters/OBJExporter\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\n\nexport class ThreeMeshExporter implements IMeshExporter {\n    constructor(readonly content: ThreeVisualContext) {}\n\n    exportToStl(nodes: VisualNode[], asciiMode: boolean): Result<BlobPart> {\n        const exporter = new STLExporter();\n        const group = this.parseNodeToGroup(nodes);\n        const blob = exporter.parse(group, { binary: !asciiMode });\n        this.disposeObject(group);\n        return Result.ok(blob);\n    }\n\n    exportToPly(nodes: VisualNode[], asciiMode: boolean): Result<BlobPart> {\n        const exporter = new PLYExporter();\n        const group = this.parseNodeToGroup(nodes);\n        const blobPart = exporter.parse(group, () => {}, { binary: !asciiMode });\n        this.disposeObject(group);\n        if (!blobPart) {\n            return Result.err(\"can not export to ply\");\n        }\n        return Result.ok(blobPart);\n    }\n\n    exportToObj(nodes: VisualNode[]): Result<BlobPart> {\n        const exporter = new OBJExporter();\n        const group = this.parseNodeToGroup(nodes);\n        const blobPart = exporter.parse(group);\n        this.disposeObject(group);\n        return Result.ok(blobPart);\n    }\n\n    private disposeObject(object: Object3D) {\n        object.traverse((child) => {\n            if (child instanceof Mesh) {\n                child.geometry.dispose();\n            }\n        });\n    }\n\n    private parseNodeToGroup(nodes: VisualNode[]) {\n        const group = new Group();\n        nodes.forEach((node) => {\n            const visualObject = this.content.getVisual(node);\n            if (visualObject instanceof Object3D) {\n                visualObject.traverse((child) => {\n                    if (child instanceof LineSegments2 || child instanceof Line2) {\n                        return;\n                    }\n                    if (child instanceof Mesh) {\n                        group.add(child.clone(false));\n                    }\n                });\n            }\n        });\n\n        return group;\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { IDisposable, IDocument, IEventHandler, IMeshExporter, IVisual, Logger, Plane } from \"chili-core\";\nimport { NodeSelectionHandler } from \"chili-vis\";\nimport { AmbientLight, AxesHelper, Object3D, Scene } from \"three\";\nimport { ThreeHighlighter } from \"./threeHighlighter\";\nimport { ThreeView } from \"./threeView\";\nimport { ThreeVisualContext } from \"./threeVisualContext\";\nimport { ThreeViewHandler } from \"./threeViewEventHandler\";\nimport { ThreeMeshExporter } from \"./meshExporter\";\n\nObject3D.DEFAULT_UP.set(0, 0, 1);\n\nexport class ThreeVisual implements IVisual {\n    readonly defaultEventHandler: IEventHandler;\n    readonly context: ThreeVisualContext;\n    readonly scene: Scene;\n    readonly highlighter: ThreeHighlighter;\n    readonly viewHandler: IEventHandler;\n    readonly meshExporter: IMeshExporter;\n    private _eventHandler: IEventHandler;\n\n    get eventHandler() {\n        return this._eventHandler;\n    }\n\n    set eventHandler(value: IEventHandler) {\n        if (this._eventHandler === value) return;\n        this._eventHandler = value;\n        Logger.info(`Changed EventHandler to ${Object.getPrototypeOf(value).constructor.name}`);\n    }\n\n    constructor(readonly document: IDocument) {\n        this.scene = this.initScene();\n        this.defaultEventHandler = this.createDefaultSelectionHandler(document);\n        this.viewHandler = new ThreeViewHandler();\n        this.context = new ThreeVisualContext(this, this.scene);\n        this.highlighter = new ThreeHighlighter(this.context);\n        this.meshExporter = new ThreeMeshExporter(this.context);\n        this._eventHandler = this.defaultEventHandler;\n    }\n\n    protected createDefaultSelectionHandler(document: IDocument) {\n        return new NodeSelectionHandler(document, true);\n    }\n\n    initScene() {\n        let scene = new Scene();\n        let envLight = new AmbientLight(0x888888, 4);\n        let axisHelper = new AxesHelper(250);\n        scene.add(envLight, axisHelper);\n        return scene;\n    }\n\n    resetEventHandler() {\n        this.eventHandler = this.defaultEventHandler;\n    }\n\n    isExcutingHandler(): boolean {\n        return this.eventHandler !== this.defaultEventHandler;\n    }\n\n    createView(name: string, workplane: Plane) {\n        return new ThreeView(this.document, name, workplane, this.highlighter, this.context);\n    }\n\n    update(): void {\n        this.document.application.views.forEach((view) => {\n            if (view.document === this.document) view.update();\n        });\n    }\n\n    dispose() {\n        this.context.dispose();\n        this.defaultEventHandler.dispose();\n        this._eventHandler.dispose();\n        this.viewHandler.dispose();\n        this.scene.traverse((x) => {\n            if (IDisposable.isDisposable(x)) x.dispose();\n        });\n        this.scene.clear();\n    }\n}\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\n// See LICENSE file in the project root for full license information.\n\nimport { IDocument, IVisual, IVisualFactory } from \"chili-core\";\n\nimport { ThreeVisual } from \"./threeVisual\";\n\nexport class ThreeVisulFactory implements IVisualFactory {\n    readonly kernelName = \"three\";\n    create(document: IDocument): IVisual {\n        return new ThreeVisual(document);\n    }\n}\n"],"names":["ThreeHelper","matrix","Matrix4","ThreeMatrix4","vector","XYZ","Vector3","camera","color","ThreeColor","groups","subIndex","i","array","x","y","z","object","box","Box3","min","max","item","map","TextureLoader","RepeatWrapping","MathUtils","material","ThreePhysicalMaterial","DoubleSide","ThreePhoneMaterial","ThreeLambertMaterial","PhysicalMaterial","PhongMaterial","defaultEdgeMaterial","LineMaterial","VisualConfig","property","getCurrentApplication","hilightEdgeMaterial","selectedEdgeMaterial","faceTransparentMaterial","MeshLambertMaterial","faceColoredMaterial","Constants","Object","ThreeGeometryFactory","data","buff","AlwaysDepth","Points","PointsMaterial","opacity","Mesh","undefined","buffer","Array","Float32BufferAttribute","BufferGeometry","BufferAttribute","LineSegments2","LineType","LineSegmentsGeometry","HighlightFaceMaterial","ThreeVisualObject","Object3D","value","node","ThreeMeshObject","context","meshNode","shapeType","subVisualIndex","Error","mesh","line","geometry","LineGeometry","Line2","GroupVisualObject","Group","groupNode","ThreeComponentObject","componentNode","materials","BoundingBox","range","index","shapes","isWhole","ShapeType","ThreeGeometry","geometryNode","positions","MeshUtils","subShape","transform","shape","ShapeNode","IHighlightable","is","GeometryState","highlighter","visual","Map","type","key","state","method","_oldState","newState","VisualState","oldState","func","shouldRemoved","points","console","lineGeometry","segment","ThreeHighlighter","content","v","k","geometryState","datas","group","ShapeMeshData","id","IDisposable","DEG_TO_RAD","Math","Camera","CameraController","Observable","OrthographicCamera","view","near","far","PerspectiveCamera","mode","ViewMode","dx","dy","ratio","PAN_SPEED_FACTOR","direction","hor","ver","width","height","aspect","frustumHalfHeight","length","CAMERA_FOV","nodes","newRotation","distance","eyeToCenter","currentPosition","diffPosition","diffRotation","targetAfterTrans","currentCenter","rotationDy","Quaternion","tmpRotation","tmpRotationInv","rotationDx","sphere","fieldOfView","Sphere","VisualNode","threeGeometry","boundingBox","delta","zoomFactor","scale","mouse","targetMoveVector","raycaster","Raycaster","intersect","ZOOM_SPEED_FACTOR","directionNormal","dot","project","eye","target","up","mx","my","dist","options","ViewGizmo","HTMLElement","e","rect","position","canvas","document","invRotMat","axis","a","b","axes","closestDist","Infinity","p","radius","p1","p2","customElements","ThreeView","name","workplane","DirectionalLight","entries","entry","resizerObserverCallback","debounce","ResizeObserver","otherView","PubSub","renderer","WebGLRenderer","window","CSS2DRenderer","element","text","point","dispose","cssObject","CSS2DObject","div","style","span","svg","requestAnimationFrame","dir","Vector2","origin","Ray","vec","cx","cy","XY","nodeFilter","detected","threeObject","mx1","my1","mx2","my2","selectionBox","Set","obj","SelectionBox","start","end","shapeFilter","detecteds","containsCache","cache","addShape","indexes","intersections","parent","MultiShapeNode","result","intersected","visualShape","nodeWorldTransform","intersection","solid","shell","wire","ancestor","sub","visuals","threshold","mousePos","ThreeVisualContext","scene","args","CollectionAction","path","source","isOk","DeepObserver","Texture","records","adds","rms","NodeAction","INode","threeMaterial","paths","models","nodel","filter","testBox","matrixs","instancedMesh","InstancedMesh","bufferGeometry","LineBasicMaterial","lineSegments","LineSegments","visible","oldParent","parentNode","newParentNode","visualObject","MeshNode","GeometryNode","GroupNode","ComponentNode","m","child","wireframe","faces","ThreeViewHandler","event","currentNav3D","Config","Navigation3D","navigatioMap","offset","last","current","dtCenter","dtDistance","findPrimary","pointerEvents","primary","values","first","second","center","x1","y1","x2","y2","Date","clearTimeout","ThreeMeshExporter","asciiMode","exporter","STLExporter","blob","Result","PLYExporter","blobPart","OBJExporter","ThreeVisual","Logger","NodeSelectionHandler","Scene","envLight","AmbientLight","axisHelper","AxesHelper","ThreeVisulFactory"],"mappings":"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"}